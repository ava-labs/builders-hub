{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "initialEntries",
          "type": "tuple[]",
          "internalType": "struct ProtocolRegistryEntry[]",
          "components": [
            {
              "name": "version",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "protocolAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_VERSION_INCREMENT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VALIDATORS_SOURCE_ADDRESS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WARP_MESSENGER",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IWarpMessenger"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addProtocolVersion",
      "inputs": [
        {
          "name": "messageIndex",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "blockchainID",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAddressFromVersion",
      "inputs": [
        {
          "name": "version",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLatestTeleporter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ITeleporterMessenger"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTeleporterFromVersion",
      "inputs": [
        {
          "name": "version",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ITeleporterMessenger"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getVersionFromAddress",
      "inputs": [
        {
          "name": "protocolAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "latestVersion",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AddProtocolVersion",
      "inputs": [
        {
          "name": "version",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "protocolAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "LatestVersionUpdated",
      "inputs": [
        {
          "name": "oldVersion",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "newVersion",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "794:7960:46:-:0;;;2652:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1333:42;-1:-1:-1;;;;;2750:30:46;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2735:47;;2810:21;;2793:14;2841:91;2861:6;2857:1;:10;2841:91;;;2888:33;2903:14;2918:1;2903:17;;;;;;;;:::i;:::-;;;;;;;2888:14;;;:33;;:::i;:::-;2869:3;;2841:91;;;;2725:213;2652:286;794:7960;;7358:1394;7458:13;;;:18;7450:63;;;;-1:-1:-1;;;7450:63:46;;2499:2:160;7450:63:46;;;2481:21:160;;;2518:18;;;2511:30;2577:34;2557:18;;;2550:62;2629:18;;7450:63:46;;;;;;;;;7632:13;;7658:1;7614:32;;;:17;:32;;;;;;-1:-1:-1;;;;;7614:32:46;:46;7593:135;;;;-1:-1:-1;;;7593:135:46;;2860:2:160;7593:135:46;;;2842:21:160;2899:2;2879:18;;;2872:30;2938:34;2918:18;;;2911:62;-1:-1:-1;;;2989:18:160;;;2982:40;3039:19;;7593:135:46;2658:406:160;7593:135:46;7746:21;;;;-1:-1:-1;;;;;7746:35:46;7738:89;;;;-1:-1:-1;;;7738:89:46;;3271:2:160;7738:89:46;;;3253:21:160;3310:2;3290:18;;;3283:30;3349:34;3329:18;;;3322:62;-1:-1:-1;;;3400:18:160;;;3393:39;3449:19;;7738:89:46;3069:405:160;7738:89:46;7838:22;7863:13;7924:38;1536:3;7863:13;7924:38;:::i;:::-;7907:13;;:55;;7886:148;;;;-1:-1:-1;;;7886:148:46;;3908:2:160;7886:148:46;;;3890:21:160;3947:2;3927:18;;;3920:30;3986:34;3966:18;;;3959:62;-1:-1:-1;;;4037:18:160;;;4030:44;4091:19;;7886:148:46;3706:410:160;7886:148:46;8080:21;;;;;;8063:13;;8045:32;;;;:17;:32;;;;;;:56;;-1:-1:-1;;;;;;8045:56:46;-1:-1:-1;;;;;8045:56:46;;;;;;8311:21;;8293:40;;;;;:17;:40;;;;;;8277:13;;:56;8273:143;;;8392:13;;8367:21;;;;;-1:-1:-1;;;;;8349:40:46;8392:13;8349:40;;;:17;:40;;;;;;:56;8273:143;8464:21;;;;8449:13;;8430:56;;-1:-1:-1;;;;;8430:56:46;;;;;;8449:13;;8430:56;8590:13;;:30;-1:-1:-1;8586:160:46;;;8652:13;;;8636:29;;;8684:51;;8705:14;;8684:51;;;8586:160;7440:1312;7358:1394;:::o;14:127:160:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:256;217:4;211:11;;;249:17;;-1:-1:-1;;;;;281:34:160;;317:22;;;278:62;275:88;;;343:18;;:::i;:::-;379:4;372:24;146:256;:::o;407:275::-;478:2;472:9;543:2;524:13;;-1:-1:-1;;520:27:160;508:40;;-1:-1:-1;;;;;563:34:160;;599:22;;;560:62;557:88;;;625:18;;:::i;:::-;661:2;654:22;407:275;;-1:-1:-1;407:275:160:o;687:1284::-;822:6;853:2;896;884:9;875:7;871:23;867:32;864:52;;;912:1;909;902:12;864:52;939:16;;-1:-1:-1;;;;;1004:14:160;;;1001:34;;;1031:1;1028;1021:12;1001:34;1069:6;1058:9;1054:22;1044:32;;1114:7;1107:4;1103:2;1099:13;1095:27;1085:55;;1136:1;1133;1126:12;1085:55;1165:2;1159:9;1187:2;1183;1180:10;1177:36;;;1193:18;;:::i;:::-;1233:36;1265:2;1260;1257:1;1253:10;1249:19;1233:36;:::i;:::-;1303:15;;;1334:12;;;;-1:-1:-1;1385:1:160;1381:10;;;;1373:19;;1369:28;;;1409:19;;;1406:39;;;1441:1;1438;1431:12;1406:39;1465:11;;;;1485:456;1501:6;1496:3;1493:15;1485:456;;;1583:4;1577:3;1568:7;1564:17;1560:28;1557:48;;;1601:1;1598;1591:12;1557:48;1631:21;;:::i;:::-;1679:10;;1665:25;;1724:12;;;1718:19;-1:-1:-1;;;;;1772:33:160;;1760:46;;1750:74;;1820:1;1817;1810:12;1750:74;1844:14;;;1837:31;1881:18;;1527:4;1518:14;;;;;1919:12;;;;1485:456;;;1960:5;687:1284;-1:-1:-1;;;;;;;687:1284:160:o;1976:184::-;2046:6;2099:2;2087:9;2078:7;2074:23;2070:32;2067:52;;;2115:1;2112;2105:12;2067:52;-1:-1:-1;2138:16:160;;1976:184;-1:-1:-1;1976:184:160:o;2165:127::-;2226:10;2221:3;2217:20;2214:1;2207:31;2257:4;2254:1;2247:15;2281:4;2278:1;2271:15;3479:222;3544:9;;;3565:10;;;3562:133;;;3617:10;3612:3;3608:20;3605:1;3598:31;3652:4;3649:1;3642:15;3680:4;3677:1;3670:15;3562:133;3479:222;;;;:::o;3706:410::-;794:7960:46;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063ac473ac311610063578063ac473ac31461011f578063b771b3bc14610128578063c07f47d414610136578063d127dc9b1461013e578063d820e64f14610165575f80fd5b80630731775d1461009f578063215abce9146100c357806341f34ed9146100d657806346f9ef49146100eb5780634c1f08ce146100fe575b5f80fd5b6100a65f81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a66100d13660046107aa565b61016d565b6100e96100e43660046107c1565b61017d565b005b6100a66100f93660046107aa565b6103ec565b61011161010c366004610802565b6104ae565b6040519081526020016100ba565b6101116101f481565b6100a66005600160991b0181565b6101115f5481565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6100a6610554565b5f610177826103ec565b92915050565b6040516306f8253560e41b815263ffffffff821660048201525f9081906005600160991b0190636f825350906024015f60405180830381865afa1580156101c6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526101ed919081019061089f565b91509150806102545760405162461bcd60e51b815260206004820152602860248201527f54656c65706f7274657252656769737472793a20696e76616c69642077617270604482015267206d65737361676560c01b60648201526084015b60405180910390fd5b81517f0000000000000000000000000000000000000000000000000000000000000000146102d85760405162461bcd60e51b815260206004820152602b60248201527f54656c65706f7274657252656769737472793a20696e76616c696420736f757260448201526a18d94818da185a5b88125160aa1b606482015260840161024b565b60208201516001600160a01b03161561034d5760405162461bcd60e51b815260206004820152603160248201527f54656c65706f7274657252656769737472793a20696e76616c6964206f726967604482015270696e2073656e646572206164647265737360781b606482015260840161024b565b5f808360400151806020019051810190610367919061099e565b90925090506001600160a01b03811630146103dc5760405162461bcd60e51b815260206004820152602f60248201527f54656c65706f7274657252656769737472793a20696e76616c6964206465737460448201526e696e6174696f6e206164647265737360881b606482015260840161024b565b6103e582610564565b5050505050565b5f815f0361043c5760405162461bcd60e51b815260206004820181905260248201527f54656c65706f7274657252656769737472793a207a65726f2076657273696f6e604482015260640161024b565b5f828152600160205260409020546001600160a01b0316806101775760405162461bcd60e51b815260206004820152602560248201527f54656c65706f7274657252656769737472793a2076657273696f6e206e6f7420604482015264199bdd5b9960da1b606482015260840161024b565b5f6001600160a01b0382166104d55760405162461bcd60e51b815260040161024b90610a17565b6001600160a01b0382165f90815260026020526040812054908190036101775760405162461bcd60e51b815260206004820152602e60248201527f54656c65706f7274657252656769737472793a2070726f746f636f6c2061646460448201526d1c995cdcc81b9bdd08199bdd5b9960921b606482015260840161024b565b5f61055f5f546103ec565b905090565b80515f036105b45760405162461bcd60e51b815260206004820181905260248201527f54656c65706f7274657252656769737472793a207a65726f2076657273696f6e604482015260640161024b565b80515f908152600160205260409020546001600160a01b03161561062d5760405162461bcd60e51b815260206004820152602a60248201527f54656c65706f7274657252656769737472793a2076657273696f6e20616c72656044820152696164792065786973747360b01b606482015260840161024b565b60208101516001600160a01b03166106575760405162461bcd60e51b815260040161024b90610a17565b5f546106656101f482610a60565b825111156106cc5760405162461bcd60e51b815260206004820152602e60248201527f54656c65706f7274657252656769737472793a2076657273696f6e20696e637260448201526d0cadacadce840e8dede40d0d2ced60931b606482015260840161024b565b6020828101805184515f90815260018452604080822080546001600160a01b0319166001600160a01b03948516179055925190911681526002909252902054825111156107335781516020808401516001600160a01b03165f908152600290915260409020555b602082015182516040516001600160a01b03909216917fa5eed93d951a9603d5f7c0a57de79a299dd3dbd5e51429be209d8053a42ab43a905f90a381518110156107a65781515f81815560405183917f30623e953733f6474dabdfbef1103ce15ab73cdc77c6dfad0f9874d167e8a9b091a35b5050565b5f602082840312156107ba575f80fd5b5035919050565b5f602082840312156107d1575f80fd5b813563ffffffff811681146107e4575f80fd5b9392505050565b6001600160a01b03811681146107ff575f80fd5b50565b5f60208284031215610812575f80fd5b81356107e4816107eb565b634e487b7160e01b5f52604160045260245ffd5b6040516060810167ffffffffffffffff811182821017156108545761085461081d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108835761088361081d565b604052919050565b8051801515811461089a575f80fd5b919050565b5f80604083850312156108b0575f80fd5b825167ffffffffffffffff808211156108c7575f80fd5b90840190606082870312156108da575f80fd5b6108e2610831565b825181526020808401516108f5816107eb565b8282015260408401518381111561090a575f80fd5b80850194505087601f85011261091e575f80fd5b8351838111156109305761093061081d565b610942601f8201601f1916830161085a565b93508084528882828701011115610957575f80fd5b5f5b81811015610974578581018301518582018401528201610959565b505f8282860101525082604083015281955061099181880161088b565b9450505050509250929050565b5f8082840360608112156109b0575f80fd5b60408112156109bd575f80fd5b506040516040810181811067ffffffffffffffff821117156109e1576109e161081d565b6040528351815260208401516109f6816107eb565b60208201526040840151909250610a0c816107eb565b809150509250929050565b60208082526029908201527f54656c65706f7274657252656769737472793a207a65726f2070726f746f636f6040820152686c206164647265737360b81b606082015260800190565b8082018082111561017757634e487b7160e01b5f52601160045260245ffdfea164736f6c6343000819000a",
    "sourceMap": "794:7960:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:62;;1160:1;1100:62;;;;;-1:-1:-1;;;;;178:32:160;;;160:51;;148:2;133:18;1100:62:46;;;;;;;;5423:186;;;;;;:::i;:::-;;:::i;3884:1116::-;;;;;;:::i;:::-;;:::i;:::-;;5766:349;;;;;;:::i;:::-;;:::i;6298:367::-;;;;;;:::i;:::-;;:::i;:::-;;;1460:25:160;;;1448:2;1433:18;6298:367:46;1314:177:160;1488:51:46;;1536:3;1488:51;;1262:114;;-1:-1:-1;;;;;1262:114:46;;1824:28;;;;;;1637:37;;;;;5083:158;;;:::i;5423:186::-;5511:20;5571:30;5593:7;5571:21;:30::i;:::-;5543:59;5423:186;-1:-1:-1;;5423:186:46:o;3884:1116::-;4139:51;;-1:-1:-1;;;4139:51:46;;2085:10:160;2073:23;;4139:51:46;;;2055:42:160;4083:26:46;;;;-1:-1:-1;;;;;1333:42:46;4139:37;;2028:18:160;;4139:51:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4139:51:46;;;;;;;;;;;;:::i;:::-;4082:108;;;;4208:7;4200:60;;;;-1:-1:-1;;;4200:60:46;;4536:2:160;4200:60:46;;;4518:21:160;4575:2;4555:18;;;4548:30;4614:34;4594:18;;;4587:62;-1:-1:-1;;;4665:18:160;;;4658:38;4713:19;;4200:60:46;;;;;;;;;4291:21;;4316:12;4291:37;4270:115;;;;-1:-1:-1;;;4270:115:46;;4945:2:160;4270:115:46;;;4927:21:160;4984:2;4964:18;;;4957:30;5023:34;5003:18;;;4996:62;-1:-1:-1;;;5074:18:160;;;5067:41;5125:19;;4270:115:46;4743:407:160;4270:115:46;4492:27;;;;-1:-1:-1;;;;;4492:56:46;;4471:152;;;;-1:-1:-1;;;4471:152:46;;5357:2:160;4471:152:46;;;5339:21:160;5396:2;5376:18;;;5369:30;5435:34;5415:18;;;5408:62;-1:-1:-1;;;5486:18:160;;;5479:47;5543:19;;4471:152:46;5155:413:160;4471:152:46;4635:34;4671:26;4724:7;:15;;;4713:61;;;;;;;;;;;;:::i;:::-;4634:140;;-1:-1:-1;4634:140:46;-1:-1:-1;;;;;;4865:35:46;;4895:4;4865:35;4844:117;;;;-1:-1:-1;;;4844:117:46;;6576:2:160;4844:117:46;;;6558:21:160;6615:2;6595:18;;;6588:30;6654:34;6634:18;;;6627:62;-1:-1:-1;;;6705:18:160;;;6698:45;6760:19;;4844:117:46;6374:411:160;4844:117:46;4972:21;4987:5;4972:14;:21::i;:::-;3956:1044;;;;3884:1116;:::o;5766:349::-;5849:7;5876;5887:1;5876:12;5868:57;;;;-1:-1:-1;;;5868:57:46;;6992:2:160;5868:57:46;;;6974:21:160;;;7011:18;;;7004:30;7070:34;7050:18;;;7043:62;7122:18;;5868:57:46;6790:356:160;5868:57:46;5935:23;5961:26;;;:17;:26;;;;;;-1:-1:-1;;;;;5961:26:46;;5997:79;;;;-1:-1:-1;;;5997:79:46;;7353:2:160;5997:79:46;;;7335:21:160;7392:2;7372:18;;;7365:30;7431:34;7411:18;;;7404:62;-1:-1:-1;;;7482:18:160;;;7475:35;7527:19;;5997:79:46;7151:401:160;6298:367:46;6389:7;-1:-1:-1;;;;;6416:29:46;;6408:83;;;;-1:-1:-1;;;6408:83:46;;;;;;;:::i;:::-;-1:-1:-1;;;;;6519:34:46;;6501:15;6519:34;;;:17;:34;;;;;;;6571:12;;;6563:71;;;;-1:-1:-1;;;6563:71:46;;8169:2:160;6563:71:46;;;8151:21:160;8208:2;8188:18;;;8181:30;8247:34;8227:18;;;8220:62;-1:-1:-1;;;8298:18:160;;;8291:44;8352:19;;6563:71:46;7967:410:160;5083:158:46;5137:20;5197:36;5219:13;;5197:21;:36::i;:::-;5169:65;;5083:158;:::o;7358:1394::-;7458:13;;;:18;7450:63;;;;-1:-1:-1;;;7450:63:46;;6992:2:160;7450:63:46;;;6974:21:160;;;7011:18;;;7004:30;7070:34;7050:18;;;7043:62;7122:18;;7450:63:46;6790:356:160;7450:63:46;7632:13;;7658:1;7614:32;;;:17;:32;;;;;;-1:-1:-1;;;;;7614:32:46;:46;7593:135;;;;-1:-1:-1;;;7593:135:46;;8584:2:160;7593:135:46;;;8566:21:160;8623:2;8603:18;;;8596:30;8662:34;8642:18;;;8635:62;-1:-1:-1;;;8713:18:160;;;8706:40;8763:19;;7593:135:46;8382:406:160;7593:135:46;7746:21;;;;-1:-1:-1;;;;;7746:35:46;7738:89;;;;-1:-1:-1;;;7738:89:46;;;;;;;:::i;:::-;7838:22;7863:13;7924:38;1536:3;7863:13;7924:38;:::i;:::-;7907:13;;:55;;7886:148;;;;-1:-1:-1;;;7886:148:46;;9222:2:160;7886:148:46;;;9204:21:160;9261:2;9241:18;;;9234:30;9300:34;9280:18;;;9273:62;-1:-1:-1;;;9351:18:160;;;9344:44;9405:19;;7886:148:46;9020:410:160;7886:148:46;8080:21;;;;;;8063:13;;8045:32;;;;:17;:32;;;;;;:56;;-1:-1:-1;;;;;;8045:56:46;-1:-1:-1;;;;;8045:56:46;;;;;;8311:21;;8293:40;;;;;:17;:40;;;;;;8277:13;;:56;8273:143;;;8392:13;;8367:21;;;;;-1:-1:-1;;;;;8349:40:46;8392:13;8349:40;;;:17;:40;;;;;;:56;8273:143;8464:21;;;;8449:13;;8430:56;;-1:-1:-1;;;;;8430:56:46;;;;;;8449:13;;8430:56;8590:13;;:30;-1:-1:-1;8586:160:46;;;8652:13;;;8636:29;;;8684:51;;8705:14;;8684:51;;;8586:160;7440:1312;7358:1394;:::o;222:180:160:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:160;;222:180;-1:-1:-1;222:180:160:o;645:276::-;703:6;756:2;744:9;735:7;731:23;727:32;724:52;;;772:1;769;762:12;724:52;811:9;798:23;861:10;854:5;850:22;843:5;840:33;830:61;;887:1;884;877:12;830:61;910:5;645:276;-1:-1:-1;;;645:276:160:o;926:131::-;-1:-1:-1;;;;;1001:31:160;;991:42;;981:70;;1047:1;1044;1037:12;981:70;926:131;:::o;1062:247::-;1121:6;1174:2;1162:9;1153:7;1149:23;1145:32;1142:52;;;1190:1;1187;1180:12;1142:52;1229:9;1216:23;1248:31;1273:5;1248:31;:::i;2108:127::-;2169:10;2164:3;2160:20;2157:1;2150:31;2200:4;2197:1;2190:15;2224:4;2221:1;2214:15;2240:253;2312:2;2306:9;2354:4;2342:17;;2389:18;2374:34;;2410:22;;;2371:62;2368:88;;;2436:18;;:::i;:::-;2472:2;2465:22;2240:253;:::o;2498:275::-;2569:2;2563:9;2634:2;2615:13;;-1:-1:-1;;2611:27:160;2599:40;;2669:18;2654:34;;2690:22;;;2651:62;2648:88;;;2716:18;;:::i;:::-;2752:2;2745:22;2498:275;;-1:-1:-1;2498:275:160:o;2778:164::-;2854:13;;2903;;2896:21;2886:32;;2876:60;;2932:1;2929;2922:12;2876:60;2778:164;;;:::o;2947:1382::-;3054:6;3062;3115:2;3103:9;3094:7;3090:23;3086:32;3083:52;;;3131:1;3128;3121:12;3083:52;3164:9;3158:16;3193:18;3234:2;3226:6;3223:14;3220:34;;;3250:1;3247;3240:12;3220:34;3273:22;;;;3329:4;3311:16;;;3307:27;3304:47;;;3347:1;3344;3337:12;3304:47;3373:22;;:::i;:::-;3424:2;3418:9;3411:5;3404:24;3447:2;3487;3483;3479:11;3473:18;3500:33;3525:7;3500:33;:::i;:::-;3549:14;;;3542:31;3612:2;3604:11;;3598:18;3628:16;;;3625:36;;;3657:1;3654;3647:12;3625:36;3688:8;3684:2;3680:17;3670:27;;;3735:7;3728:4;3724:2;3720:13;3716:27;3706:55;;3757:1;3754;3747:12;3706:55;3786:2;3780:9;3808:2;3804;3801:10;3798:36;;;3814:18;;:::i;:::-;3856:53;3899:2;3880:13;;-1:-1:-1;;3876:27:160;3872:36;;3856:53;:::i;:::-;3843:66;;3932:2;3925:5;3918:17;3972:7;3967:2;3962;3958;3954:11;3950:20;3947:33;3944:53;;;3993:1;3990;3983:12;3944:53;4015:1;4025:128;4039:2;4036:1;4033:9;4025:128;;;4126:10;;;4122:19;;4116:26;4096:13;;;4092:22;;4085:58;4050:10;;4025:128;;;4029:3;4194:1;4189:2;4184;4177:5;4173:14;4169:23;4162:34;;4228:5;4223:2;4216:5;4212:14;4205:29;4253:5;4243:15;;4277:46;4319:2;4308:9;4304:18;4277:46;:::i;:::-;4267:56;;;;;;2947:1382;;;;;:::o;5573:796::-;5700:6;5708;5752:9;5743:7;5739:23;5782:2;5778;5774:11;5771:31;;;5798:1;5795;5788:12;5771:31;5822:4;5818:2;5814:13;5811:33;;;5840:1;5837;5830:12;5811:33;;5873:4;5867:11;5917:4;5909:6;5905:17;5988:6;5976:10;5973:22;5952:18;5940:10;5937:34;5934:62;5931:88;;;5999:18;;:::i;:::-;6035:4;6028:24;6076:16;;6061:32;;6136:2;6121:18;;6115:25;6149:31;6115:25;6149:31;:::i;:::-;6208:2;6196:15;;6189:30;6289:4;6274:20;;6268:27;6200:6;;-1:-1:-1;6304:33:160;6268:27;6304:33;:::i;:::-;6356:7;6346:17;;;5573:796;;;;;:::o;7557:405::-;7759:2;7741:21;;;7798:2;7778:18;;;7771:30;7837:34;7832:2;7817:18;;7810:62;-1:-1:-1;;;7903:2:160;7888:18;;7881:39;7952:3;7937:19;;7557:405::o;8793:222::-;8858:9;;;8879:10;;;8876:133;;;8931:10;8926:3;8922:20;8919:1;8912:31;8966:4;8963:1;8956:15;8994:4;8991:1;8984:15",
    "linkReferences": {},
    "immutableReferences": {
      "19805": [
        {
          "start": 323,
          "length": 32
        },
        {
          "start": 600,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_VERSION_INCREMENT()": "ac473ac3",
    "VALIDATORS_SOURCE_ADDRESS()": "0731775d",
    "WARP_MESSENGER()": "b771b3bc",
    "addProtocolVersion(uint32)": "41f34ed9",
    "blockchainID()": "d127dc9b",
    "getAddressFromVersion(uint256)": "46f9ef49",
    "getLatestTeleporter()": "d820e64f",
    "getTeleporterFromVersion(uint256)": "215abce9",
    "getVersionFromAddress(address)": "4c1f08ce",
    "latestVersion()": "c07f47d4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"}],\"internalType\":\"struct ProtocolRegistryEntry[]\",\"name\":\"initialEntries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"}],\"name\":\"AddProtocolVersion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldVersion\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newVersion\",\"type\":\"uint256\"}],\"name\":\"LatestVersionUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_VERSION_INCREMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATORS_SOURCE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WARP_MESSENGER\",\"outputs\":[{\"internalType\":\"contract IWarpMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"addProtocolVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockchainID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"getAddressFromVersion\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTeleporter\",\"outputs\":[{\"internalType\":\"contract ITeleporterMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"getTeleporterFromVersion\",\"outputs\":[{\"internalType\":\"contract ITeleporterMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"}],\"name\":\"getVersionFromAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"https://github.com/ava-labs/icm-contracts/blob/main/SECURITY.md\",\"details\":\"TeleporterRegistry contract provides an upgrade mechanism for {ITeleporterMessenger} contracts through Warp off-chain messages\",\"kind\":\"dev\",\"methods\":{\"addProtocolVersion(uint32)\":{\"details\":\"Receives a Warp off-chain message containing a new protocol version and address to be registered, and adds the new values to the respective mappings. If a version is greater than the current latest version, it will be set as the latest version. If a version is less than the current latest version, it is added to the registry, but doesn't change the latest version. Emits a {AddProtocolVersion} event when successful. Emits a {LatestVersionUpdated} event when a new protocol version greater than the current latest version is added. Requirements: - a valid Warp off-chain message must be provided. - source chain ID must be the same as the blockchain ID of the registry. - origin sender address must be the same as the `VALIDATORS_SOURCE_ADDRESS`. - destination address must be the same as the address of this registry.\"},\"constructor\":{\"details\":\"Initializes the contract by setting `blockchainID` and `latestVersion`. Also adds the initial protocol versions to the registry.\"},\"getAddressFromVersion(uint256)\":{\"details\":\"Gets the address of a protocol version. Requirements: - `version` must be a valid registered version.\"},\"getLatestTeleporter()\":{\"details\":\"Gets the latest {ITeleporterMessenger} contract.\"},\"getTeleporterFromVersion(uint256)\":{\"details\":\"Gets the {ITeleporterMessenger} contract of the given `version`. Requirements: - `version` must be a valid registered version.\"},\"getVersionFromAddress(address)\":{\"details\":\"Gets the version of the given `protocolAddress`. Requirements: - `protocolAddress` must be a valid registered protocol address.\"}},\"stateVariables\":{\"VALIDATORS_SOURCE_ADDRESS\":{\"details\":\"The address is not owned by any EOA or smart contract account, so it cannot possibly be the source address of any other Warp message emitted by the VM.\"},\"latestVersion\":{\"details\":\"0 means no protocol version has been added, and isn't a valid version.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddProtocolVersion(uint256,address)\":{\"notice\":\"Emitted when a new protocol version is added to the registry.\"},\"LatestVersionUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the latest version is updated.\"}},\"kind\":\"user\",\"methods\":{\"MAX_VERSION_INCREMENT()\":{\"notice\":\"The maximum version increment allowed when adding a new protocol version.\"},\"VALIDATORS_SOURCE_ADDRESS()\":{\"notice\":\"Address that the off-chain Warp message sets as the \\\"source\\\" address.\"},\"WARP_MESSENGER()\":{\"notice\":\"Warp precompile used for sending and receiving Warp messages.\"},\"blockchainID()\":{\"notice\":\"The blockchain ID of the chain the contract is deployed on.\"},\"latestVersion()\":{\"notice\":\"The latest protocol version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/teleporter/registry/TeleporterRegistry.sol\":\"TeleporterRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@avalabs/subnet-evm-contracts@1.2.2/=lib/subnet-evm/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@mocks/=contracts/mocks/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable@5.0.2/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts@5.0.2/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@teleporter/=contracts/teleporter/\",\":@utilities/=contracts/utilities/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":subnet-evm/=lib/subnet-evm/\"]},\"sources\":{\"contracts/teleporter/ITeleporterMessenger.sol\":{\"keccak256\":\"0x132bfcef25900fa05c6e7319de788502d3616646577ea2d58fb303e00f1bc715\",\"license\":\"LicenseRef-Ecosystem\",\"urls\":[\"bzz-raw://35a18c6f77f4efbbbb5c389e149d4eb6aa631fdaf7e8412e925dbb97efc532c7\",\"dweb:/ipfs/QmYi9mAqGSeC8SH2GJCtVqnhhhziFK5RQ21NirvGrBoton\"]},\"contracts/teleporter/registry/TeleporterRegistry.sol\":{\"keccak256\":\"0xcb1200cb7e6d7326fd6179f993f463d759321d3a96147554c4ecdab73fc018e7\",\"license\":\"LicenseRef-Ecosystem\",\"urls\":[\"bzz-raw://46bd08046d4e7097c2a04d43bee5df368fdaf56322b50c082738634574442095\",\"dweb:/ipfs/QmQsMeyNBepk14Tybj7BKgk5Y5G255du6JSDWo4NFfdRZG\"]},\"lib/subnet-evm/contracts/contracts/interfaces/IWarpMessenger.sol\":{\"keccak256\":\"0x9f75d13b8995e3b13a39b88b9f7d8046a3127c1b81abcd202c2438ddece42819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af89d9499252371faa23dfc13b4067876f7d7b6b01a1a3d891cbf7c9b1f90c\",\"dweb:/ipfs/QmXntNu3vLECvSAJdacsebtecoaUpeYvUDATpxS5GbB8bL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.25+commit.b61c2a91"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct ProtocolRegistryEntry[]",
              "name": "initialEntries",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "version",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "protocolAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "protocolAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddProtocolVersion",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVersion",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newVersion",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LatestVersionUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_VERSION_INCREMENT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VALIDATORS_SOURCE_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WARP_MESSENGER",
          "outputs": [
            {
              "internalType": "contract IWarpMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "messageIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addProtocolVersion"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blockchainID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddressFromVersion",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestTeleporter",
          "outputs": [
            {
              "internalType": "contract ITeleporterMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeleporterFromVersion",
          "outputs": [
            {
              "internalType": "contract ITeleporterMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVersionFromAddress",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestVersion",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addProtocolVersion(uint32)": {
            "details": "Receives a Warp off-chain message containing a new protocol version and address to be registered, and adds the new values to the respective mappings. If a version is greater than the current latest version, it will be set as the latest version. If a version is less than the current latest version, it is added to the registry, but doesn't change the latest version. Emits a {AddProtocolVersion} event when successful. Emits a {LatestVersionUpdated} event when a new protocol version greater than the current latest version is added. Requirements: - a valid Warp off-chain message must be provided. - source chain ID must be the same as the blockchain ID of the registry. - origin sender address must be the same as the `VALIDATORS_SOURCE_ADDRESS`. - destination address must be the same as the address of this registry."
          },
          "constructor": {
            "details": "Initializes the contract by setting `blockchainID` and `latestVersion`. Also adds the initial protocol versions to the registry."
          },
          "getAddressFromVersion(uint256)": {
            "details": "Gets the address of a protocol version. Requirements: - `version` must be a valid registered version."
          },
          "getLatestTeleporter()": {
            "details": "Gets the latest {ITeleporterMessenger} contract."
          },
          "getTeleporterFromVersion(uint256)": {
            "details": "Gets the {ITeleporterMessenger} contract of the given `version`. Requirements: - `version` must be a valid registered version."
          },
          "getVersionFromAddress(address)": {
            "details": "Gets the version of the given `protocolAddress`. Requirements: - `protocolAddress` must be a valid registered protocol address."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_VERSION_INCREMENT()": {
            "notice": "The maximum version increment allowed when adding a new protocol version."
          },
          "VALIDATORS_SOURCE_ADDRESS()": {
            "notice": "Address that the off-chain Warp message sets as the \"source\" address."
          },
          "WARP_MESSENGER()": {
            "notice": "Warp precompile used for sending and receiving Warp messages."
          },
          "blockchainID()": {
            "notice": "The blockchain ID of the chain the contract is deployed on."
          },
          "latestVersion()": {
            "notice": "The latest protocol version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@avalabs/subnet-evm-contracts@1.2.2/=lib/subnet-evm/contracts/",
        "@forge-std/=lib/forge-std/src/",
        "@mocks/=contracts/mocks/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-upgradeable@5.0.2/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts@5.0.2/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@teleporter/=contracts/teleporter/",
        "@utilities/=contracts/utilities/",
        "ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/",
        "subnet-evm/=lib/subnet-evm/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/teleporter/registry/TeleporterRegistry.sol": "TeleporterRegistry"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/teleporter/ITeleporterMessenger.sol": {
        "keccak256": "0x132bfcef25900fa05c6e7319de788502d3616646577ea2d58fb303e00f1bc715",
        "urls": [
          "bzz-raw://35a18c6f77f4efbbbb5c389e149d4eb6aa631fdaf7e8412e925dbb97efc532c7",
          "dweb:/ipfs/QmYi9mAqGSeC8SH2GJCtVqnhhhziFK5RQ21NirvGrBoton"
        ],
        "license": "LicenseRef-Ecosystem"
      },
      "contracts/teleporter/registry/TeleporterRegistry.sol": {
        "keccak256": "0xcb1200cb7e6d7326fd6179f993f463d759321d3a96147554c4ecdab73fc018e7",
        "urls": [
          "bzz-raw://46bd08046d4e7097c2a04d43bee5df368fdaf56322b50c082738634574442095",
          "dweb:/ipfs/QmQsMeyNBepk14Tybj7BKgk5Y5G255du6JSDWo4NFfdRZG"
        ],
        "license": "LicenseRef-Ecosystem"
      },
      "lib/subnet-evm/contracts/contracts/interfaces/IWarpMessenger.sol": {
        "keccak256": "0x9f75d13b8995e3b13a39b88b9f7d8046a3127c1b81abcd202c2438ddece42819",
        "urls": [
          "bzz-raw://12af89d9499252371faa23dfc13b4067876f7d7b6b01a1a3d891cbf7c9b1f90c",
          "dweb:/ipfs/QmXntNu3vLECvSAJdacsebtecoaUpeYvUDATpxS5GbB8bL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 46
}
