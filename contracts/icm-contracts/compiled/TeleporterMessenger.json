{
  "abi": [
    {
      "type": "function",
      "name": "WARP_MESSENGER",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IWarpMessenger"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addFeeAmount",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "feeTokenAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "additionalFeeAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "blockchainID",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateMessageID",
      "inputs": [
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "destinationBlockchainID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "checkRelayerRewardAmount",
      "inputs": [
        {
          "name": "relayer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "feeAsset",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFeeInfo",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMessageHash",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getNextMessageID",
      "inputs": [
        {
          "name": "destinationBlockchainID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReceiptAtIndex",
      "inputs": [
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct TeleporterMessageReceipt",
          "components": [
            {
              "name": "receivedMessageNonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "relayerRewardAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReceiptQueueSize",
      "inputs": [
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRelayerRewardAddress",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initializeBlockchainID",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "messageNonce",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "messageReceived",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "receiptQueues",
      "inputs": [
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "first",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "last",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "receiveCrossChainMessage",
      "inputs": [
        {
          "name": "messageIndex",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "relayerRewardAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "receivedFailedMessageHashes",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "messageHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redeemRelayerRewards",
      "inputs": [
        {
          "name": "feeAsset",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "retryMessageExecution",
      "inputs": [
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "message",
          "type": "tuple",
          "internalType": "struct TeleporterMessage",
          "components": [
            {
              "name": "messageNonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "originSenderAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "destinationBlockchainID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "destinationAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "requiredGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allowedRelayerAddresses",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "receipts",
              "type": "tuple[]",
              "internalType": "struct TeleporterMessageReceipt[]",
              "components": [
                {
                  "name": "receivedMessageNonce",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "relayerRewardAddress",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "message",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "retrySendCrossChainMessage",
      "inputs": [
        {
          "name": "message",
          "type": "tuple",
          "internalType": "struct TeleporterMessage",
          "components": [
            {
              "name": "messageNonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "originSenderAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "destinationBlockchainID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "destinationAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "requiredGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allowedRelayerAddresses",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "receipts",
              "type": "tuple[]",
              "internalType": "struct TeleporterMessageReceipt[]",
              "components": [
                {
                  "name": "receivedMessageNonce",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "relayerRewardAddress",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "message",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sendCrossChainMessage",
      "inputs": [
        {
          "name": "messageInput",
          "type": "tuple",
          "internalType": "struct TeleporterMessageInput",
          "components": [
            {
              "name": "destinationBlockchainID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "destinationAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "feeInfo",
              "type": "tuple",
              "internalType": "struct TeleporterFeeInfo",
              "components": [
                {
                  "name": "feeTokenAddress",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "requiredGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allowedRelayerAddresses",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "message",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sendSpecifiedReceipts",
      "inputs": [
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "messageIDs",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        },
        {
          "name": "feeInfo",
          "type": "tuple",
          "internalType": "struct TeleporterFeeInfo",
          "components": [
            {
              "name": "feeTokenAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "allowedRelayerAddresses",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sentMessageInfo",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "messageHash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "feeInfo",
          "type": "tuple",
          "internalType": "struct TeleporterFeeInfo",
          "components": [
            {
              "name": "feeTokenAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AddFeeAmount",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "updatedFeeInfo",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct TeleporterFeeInfo",
          "components": [
            {
              "name": "feeTokenAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BlockchainIDInitialized",
      "inputs": [
        {
          "name": "blockchainID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MessageExecuted",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MessageExecutionFailed",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "message",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct TeleporterMessage",
          "components": [
            {
              "name": "messageNonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "originSenderAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "destinationBlockchainID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "destinationAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "requiredGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allowedRelayerAddresses",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "receipts",
              "type": "tuple[]",
              "internalType": "struct TeleporterMessageReceipt[]",
              "components": [
                {
                  "name": "receivedMessageNonce",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "relayerRewardAddress",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "message",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ReceiptReceived",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "destinationBlockchainID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "relayerRewardAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "feeInfo",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct TeleporterFeeInfo",
          "components": [
            {
              "name": "feeTokenAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ReceiveCrossChainMessage",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "sourceBlockchainID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "deliverer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "rewardRedeemer",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "message",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct TeleporterMessage",
          "components": [
            {
              "name": "messageNonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "originSenderAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "destinationBlockchainID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "destinationAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "requiredGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allowedRelayerAddresses",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "receipts",
              "type": "tuple[]",
              "internalType": "struct TeleporterMessageReceipt[]",
              "components": [
                {
                  "name": "receivedMessageNonce",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "relayerRewardAddress",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "message",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RelayerRewardsRedeemed",
      "inputs": [
        {
          "name": "redeemer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "asset",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SendCrossChainMessage",
      "inputs": [
        {
          "name": "messageID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "destinationBlockchainID",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "message",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct TeleporterMessage",
          "components": [
            {
              "name": "messageNonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "originSenderAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "destinationBlockchainID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "destinationAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "requiredGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allowedRelayerAddresses",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "receipts",
              "type": "tuple[]",
              "internalType": "struct TeleporterMessageReceipt[]",
              "components": [
                {
                  "name": "receivedMessageNonce",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "relayerRewardAddress",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "message",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "feeInfo",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct TeleporterFeeInfo",
          "components": [
            {
              "name": "feeTokenAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "FailedInnerCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600e575f80fd5b5060015f8190558055613119806100245f395ff3fe608060405234801561000f575f80fd5b5060043610610148575f3560e01c8063a8898181116100bf578063df20e8bc11610079578063df20e8bc14610331578063e69d606a14610344578063e6e67bd5146103ab578063ebc3b1ba146103e6578063ecc7042814610409578063fc2d619714610412575f80fd5b8063a8898181146102a9578063a9a85614146102bc578063b771b3bc146102cf578063c473eef8146102dd578063ccb5f80914610315578063d127dc9b14610328575f80fd5b8063399b77da11610110578063399b77da1461021257806362448850146102315780638245a1b014610244578063860a3b0614610257578063892bf412146102765780638ac0fd0414610296575f80fd5b80630af5b4ff1461014c57806322296c3a146101675780632bc8b0bf1461017c5780632ca40f551461018f5780632e27c223146101e7575b5f80fd5b610154610425565b6040519081526020015b60405180910390f35b61017a610175366004612138565b6104f3565b005b61015461018a366004612153565b6105e6565b6101d961019d366004612153565b600560209081525f9182526040918290208054835180850190945260018201546001600160a01b03168452600290910154918301919091529082565b60405161015e92919061216a565b6101fa6101f5366004612153565b610602565b6040516001600160a01b03909116815260200161015e565b610154610220366004612153565b5f9081526005602052604090205490565b61015461023f366004612191565b610689565b61017a6102523660046121de565b6106e2565b610154610265366004612153565b60066020525f908152604090205481565b61028961028436600461220f565b610885565b60405161015e919061222f565b61017a6102a436600461224f565b6108b6565b6101546102b7366004612284565b610aed565b6101546102ca3660046122f4565b610b2f565b6101fa6005600160991b0181565b6101546102eb366004612385565b6001600160a01b039182165f90815260096020908152604080832093909416825291909152205490565b61017a6103233660046123bc565b610dc1565b61015460025481565b61015461033f366004612153565b6111e3565b61038c610352366004612153565b5f90815260056020908152604091829020825180840190935260018101546001600160a01b03168084526002909101549290910182905291565b604080516001600160a01b03909316835260208301919091520161015e565b6103d16103b9366004612153565b60046020525f90815260409020805460019091015482565b6040805192835260208301919091520161015e565b6103f96103f4366004612153565b61122a565b604051901515815260200161015e565b61015460035481565b61017a6104203660046123e0565b61123f565b6002545f90806104ee576005600160991b016001600160a01b0316634213cf786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610472573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104969190612423565b9050806104be5760405162461bcd60e51b81526004016104b59061243a565b60405180910390fd5b600281905560405181907f1eac640109dc937d2a9f42735a05f794b39a5e3759d681951d671aabbce4b104905f90a25b919050565b335f9081526009602090815260408083206001600160a01b0385168452909152902054806105745760405162461bcd60e51b815260206004820152602860248201527f54656c65706f727465724d657373656e6765723a206e6f2072657761726420746044820152676f2072656465656d60c01b60648201526084016104b5565b335f8181526009602090815260408083206001600160a01b03871680855290835281842093909355518481529192917f3294c84e5b0f29d9803655319087207bc94f4db29f7927846944822773780b88910160405180910390a36105e26001600160a01b0383163383611494565b5050565b5f8181526004602052604081206105fc906114f8565b92915050565b5f8181526007602052604081205461066e5760405162461bcd60e51b815260206004820152602960248201527f54656c65706f727465724d657373656e6765723a206d657373616765206e6f74604482015268081c9958d95a5d995960ba1b60648201526084016104b5565b505f908152600860205260409020546001600160a01b031690565b5f60015f54146106ab5760405162461bcd60e51b81526004016104b590612481565b60025f556106d86106bb836126b8565b83355f9081526004602052604090206106d39061150a565b611604565b60015f5592915050565b60015f54146107035760405162461bcd60e51b81526004016104b590612481565b60025f818155905461071b9060408401358435610aed565b5f818152600560209081526040918290208251808401845281548152835180850190945260018201546001600160a01b0316845260029091015483830152908101919091528051919250906107825760405162461bcd60e51b81526004016104b590612757565b5f8360405160200161079491906129d6565b60408051601f19818403018152919052825181516020830120919250146107cd5760405162461bcd60e51b81526004016104b5906129e8565b8360400135837f2a211ad4a59ab9d003852404f9c57c690704ee755f3c79d2c2812ad32da99df8868560200151604051610808929190612a31565b60405180910390a360405163ee5b48eb60e01b81526005600160991b019063ee5b48eb9061083a908490600401612ab2565b6020604051808303815f875af1158015610856573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061087a9190612423565b505060015f55505050565b604080518082019091525f80825260208201525f8381526004602052604090206108af9083611837565b9392505050565b60015f54146108d75760405162461bcd60e51b81526004016104b590612481565b60025f5560018054146108fc5760405162461bcd60e51b81526004016104b590612ac4565b6002600155806109665760405162461bcd60e51b815260206004820152602f60248201527f54656c65706f727465724d657373656e6765723a207a65726f2061646469746960448201526e1bdb985b0819995948185b5bdd5b9d608a1b60648201526084016104b5565b6001600160a01b03821661098c5760405162461bcd60e51b81526004016104b590612b09565b5f838152600560205260409020546109b65760405162461bcd60e51b81526004016104b590612757565b5f838152600560205260409020600101546001600160a01b03838116911614610a475760405162461bcd60e51b815260206004820152603760248201527f54656c65706f727465724d657373656e6765723a20696e76616c69642066656560448201527f20617373657420636f6e7472616374206164647265737300000000000000000060648201526084016104b5565b5f610a5283836118f8565b5f85815260056020526040812060020180549293508392909190610a77908490612b71565b90915550505f8481526005602052604090819020905185917fc1bfd1f1208927dfbd414041dcb5256e6c9ad90dd61aec3249facbd34ff7b3e191610ad8916001019081546001600160a01b0316815260019190910154602082015260400190565b60405180910390a2505060018080555f555050565b6040805130602082015290810184905260608101839052608081018290525f9060a0016040516020818303038152906040528051906020012090509392505050565b5f60015f5414610b515760405162461bcd60e51b81526004016104b590612481565b60025f818155905490866001600160401b03811115610b7257610b726124c4565b604051908082528060200260200182016040528015610bb657816020015b604080518082019091525f8082526020820152815260200190600190039081610b905790505b509050865f5b81811015610d2e575f8a8a83818110610bd757610bd7612b84565b9050602002013590505f60075f8381526020019081526020015f20549050805f03610c535760405162461bcd60e51b815260206004820152602660248201527f54656c65706f727465724d657373656e6765723a2072656365697074206e6f7460448201526508199bdd5b9960d21b60648201526084016104b5565b610c5e8d8783610aed565b8214610cd25760405162461bcd60e51b815260206004820152603a60248201527f54656c65706f727465724d657373656e6765723a206d6573736167652049442060448201527f6e6f742066726f6d20736f7572636520626c6f636b636861696e00000000000060648201526084016104b5565b5f828152600860209081526040918290205482518084019093528383526001600160a01b03169082018190528651909190879086908110610d1557610d15612b84565b6020026020010181905250505050806001019050610bbc565b506040805160c0810182528b81525f6020820152610daf918101610d57368b90038b018b612b98565b81526020015f81526020018888808060200260200160405190810160405280939291908181526020018383602002808284375f9201829052509385525050604080519283526020808401909152909201525083611604565b60015f559a9950505050505050505050565b6001805414610de25760405162461bcd60e51b81526004016104b590612ac4565b60026001556040516306f8253560e41b815263ffffffff831660048201525f9081906005600160991b0190636f825350906024015f60405180830381865afa158015610e30573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610e579190810190612c0e565b9150915080610eba5760405162461bcd60e51b815260206004820152602960248201527f54656c65706f727465724d657373656e6765723a20696e76616c69642077617260448201526870206d65737361676560b81b60648201526084016104b5565b60208201516001600160a01b03163014610f315760405162461bcd60e51b815260206004820152603260248201527f54656c65706f727465724d657373656e6765723a20696e76616c6964206f726960448201527167696e2073656e646572206164647265737360701b60648201526084016104b5565b5f8260400151806020019051810190610f4a9190612da2565b90505f610f55610425565b905080826040015114610fc45760405162461bcd60e51b815260206004820152603160248201527f54656c65706f727465724d657373656e6765723a20696e76616c6964206465736044820152701d1a5b985d1a5bdb8818da185a5b881251607a1b60648201526084016104b5565b835182515f91610fd5918490610aed565b5f81815260076020526040902054909150156110495760405162461bcd60e51b815260206004820152602d60248201527f54656c65706f727465724d657373656e6765723a206d65737361676520616c7260448201526c1958591e481c9958d95a5d9959609a1b60648201526084016104b5565b611057338460a00151611904565b6110b55760405162461bcd60e51b815260206004820152602960248201527f54656c65706f727465724d657373656e6765723a20756e617574686f72697a6560448201526832103932b630bcb2b960b91b60648201526084016104b5565b6110c281845f0151611970565b6001600160a01b038616156110f8575f81815260086020526040902080546001600160a01b0319166001600160a01b0388161790555b60c0830151515f5b8181101561113b5761113384885f01518760c00151848151811061112657611126612b84565b60200260200101516119e0565b600101611100565b50604080518082018252855181526001600160a01b03891660208083019190915288515f90815260049091529190912061117491611b04565b336001600160a01b0316865f0151837f292ee90bbaf70b5d4936025e09d56ba08f3e421156b6a568cf3c2840d9343e348a886040516111b4929190612fb1565b60405180910390a460e084015151156111d5576111d582875f015186611b5e565b505060018055505050505050565b6002545f90806112055760405162461bcd60e51b81526004016104b59061243a565b5f60035460016112159190612b71565b9050611222828583610aed565b949350505050565b5f8181526007602052604081205415156105fc565b60018054146112605760405162461bcd60e51b81526004016104b590612ac4565b60026001819055545f906112779084908435610aed565b5f81815260066020526040902054909150806112a55760405162461bcd60e51b81526004016104b590612757565b80836040516020016112b791906129d6565b60405160208183030381529060405280519060200120146112ea5760405162461bcd60e51b81526004016104b5906129e8565b5f6112fb6080850160608601612138565b6001600160a01b03163b1161136f5760405162461bcd60e51b815260206004820152603460248201527f54656c65706f727465724d657373656e6765723a2064657374696e6174696f6e604482015273206164647265737320686173206e6f20636f646560601b60648201526084016104b5565b604051849083907f34795cc6b122b9a0ae684946319f1e14a577b4e8f9b3dda9ac94c21a54d3188c905f90a35f82815260066020908152604080832083905586916113be918701908701612138565b6113cb60e0870187612fd4565b6040516024016113de9493929190613016565b60408051601f198184030181529190526020810180516001600160e01b031663643477d560e11b17905290505f61142561141e6080870160608801612138565b5a84611c8d565b9050806114885760405162461bcd60e51b815260206004820152602b60248201527f54656c65706f727465724d657373656e6765723a20726574727920657865637560448201526a1d1a5bdb8819985a5b195960aa1b60648201526084016104b5565b50506001805550505050565b6040516001600160a01b038381166024830152604482018390526114f391859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611ca4565b505050565b805460018201545f916105fc91613040565b60605f611520600561151b856114f8565b611d05565b9050805f0361156c57604080515f8082526020820190925290611564565b604080518082019091525f808252602082015281526020019060019003908161153e5790505b509392505050565b5f816001600160401b03811115611585576115856124c4565b6040519080825280602002602001820160405280156115c957816020015b604080518082019091525f80825260208201528152602001906001900390816115a35790505b5090505f5b82811015611564576115df85611d1a565b8282815181106115f1576115f1612b84565b60209081029190910101526001016115ce565b5f8061160e610425565b90505f60035f815461161f90613053565b91905081905590505f61163683875f015184610aed565b90505f604051806101000160405280848152602001336001600160a01b03168152602001885f0151815260200188602001516001600160a01b0316815260200188606001518152602001886080015181526020018781526020018860a0015181525090505f816040516020016116ac919061306b565b60405160208183030381529060405290505f808960400151602001511115611713576040890151516001600160a01b03166116f95760405162461bcd60e51b81526004016104b590612b09565b6040890151805160209091015161171091906118f8565b90505b6040805180820182528a820151516001600160a01b03908116825260208083018590528351808501855286518783012081528082018481525f8a815260058452869020915182555180516001830180546001600160a01b03191691909516179093559101516002909101558a51915190919086907f2a211ad4a59ab9d003852404f9c57c690704ee755f3c79d2c2812ad32da99df8906117b6908890869061307d565b60405180910390a360405163ee5b48eb60e01b81526005600160991b019063ee5b48eb906117e8908690600401612ab2565b6020604051808303815f875af1158015611804573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118289190612423565b50939998505050505050505050565b604080518082019091525f8082526020820152611853836114f8565b82106118ab5760405162461bcd60e51b815260206004820152602160248201527f5265636569707451756575653a20696e646578206f7574206f6620626f756e646044820152607360f81b60648201526084016104b5565b826002015f83855f01546118bf9190612b71565b815260208082019290925260409081015f20815180830190925280548252600101546001600160a01b0316918101919091529392505050565b5f6108af833384611de4565b5f81515f03611915575060016105fc565b81515f5b8181101561196657846001600160a01b031684828151811061193d5761193d612b84565b60200260200101516001600160a01b03160361195e576001925050506105fc565b600101611919565b505f949350505050565b805f036119cf5760405162461bcd60e51b815260206004820152602760248201527f54656c65706f727465724d657373656e6765723a207a65726f206d657373616760448201526665206e6f6e636560c81b60648201526084016104b5565b5f9182526007602052604090912055565b5f6119ef8484845f0151610aed565b5f818152600560209081526040918290208251808401845281548152835180850190945260018201546001600160a01b031684526002909101548383015290810191909152805191925090611a45575050505050565b5f8281526005602090815260408083208381556001810180546001600160a01b03191690556002018390558382018051830151878401516001600160a01b0390811686526009855283862092515116855292528220805491929091611aab908490612b71565b9250508190555082602001516001600160a01b031684837fd13a7935f29af029349bed0a2097455b91fd06190a30478c575db3f31e00bf578460200151604051611af5919061308f565b60405180910390a45050505050565b600182018054829160028501915f9182611b1d83613053565b9091555081526020808201929092526040015f2082518155910151600190910180546001600160a01b0319166001600160a01b039092169190911790555050565b80608001515a1015611bc05760405162461bcd60e51b815260206004820152602560248201527f54656c65706f727465724d657373656e6765723a20696e73756666696369656e604482015264742067617360d81b60648201526084016104b5565b80606001516001600160a01b03163b5f03611be0576114f3838383611f47565b602081015160e08201516040515f92611bfd9286926024016130af565b60408051601f198184030181529190526020810180516001600160e01b031663643477d560e11b179052606083015160808401519192505f91611c41919084611c8d565b905080611c5a57611c53858585611f47565b5050505050565b604051849086907f34795cc6b122b9a0ae684946319f1e14a577b4e8f9b3dda9ac94c21a54d3188c905f90a35050505050565b5f805f808451602086015f8989f195945050505050565b5f611cb86001600160a01b03841683611fbb565b905080515f14158015611cdc575080806020019051810190611cda91906130d8565b155b156114f357604051635274afe760e01b81526001600160a01b03841660048201526024016104b5565b5f818310611d1357816108af565b5090919050565b604080518082019091525f808252602082015281546001830154819003611d835760405162461bcd60e51b815260206004820152601960248201527f5265636569707451756575653a20656d7074792071756575650000000000000060448201526064016104b5565b5f8181526002840160208181526040808420815180830190925280548252600180820180546001600160a01b03811685870152888852959094529490556001600160a01b0319909216905590611dda908390612b71565b9093555090919050565b6040516370a0823160e01b81523060048201525f9081906001600160a01b038616906370a0823190602401602060405180830381865afa158015611e2a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e4e9190612423565b9050611e656001600160a01b038616853086611fc8565b6040516370a0823160e01b81523060048201525f906001600160a01b038716906370a0823190602401602060405180830381865afa158015611ea9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ecd9190612423565b9050818111611f335760405162461bcd60e51b815260206004820152602c60248201527f5361666545524332305472616e7366657246726f6d3a2062616c616e6365206e60448201526b1bdd081a5b98dc99585cd95960a21b60648201526084016104b5565b611f3d8282613040565b9695505050505050565b80604051602001611f58919061306b565b60408051601f1981840301815282825280516020918201205f878152600690925291902055829084907f4619adc1017b82e02eaefac01a43d50d6d8de4460774bc370c3ff0210d40c98590611fae90859061306b565b60405180910390a3505050565b60606108af83835f612007565b6040516001600160a01b0384811660248301528381166044830152606482018390526120019186918216906323b872dd906084016114c1565b50505050565b60608147101561202c5760405163cd78605960e01b81523060048201526024016104b5565b5f80856001600160a01b0316848660405161204791906130f1565b5f6040518083038185875af1925050503d805f8114612081576040519150601f19603f3d011682016040523d82523d5f602084013e612086565b606091505b5091509150611f3d8683836060826120a6576120a1826120ed565b6108af565b81511580156120bd57506001600160a01b0384163b155b156120e657604051639996b31560e01b81526001600160a01b03851660048201526024016104b5565b50806108af565b8051156120fd5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b6001600160a01b0381168114612116575f80fd5b80356104ee81612119565b5f60208284031215612148575f80fd5b81356108af81612119565b5f60208284031215612163575f80fd5b5035919050565b828152606081016108af602083018480516001600160a01b03168252602090810151910152565b5f602082840312156121a1575f80fd5b81356001600160401b038111156121b6575f80fd5b820160e081850312156108af575f80fd5b5f61010082840312156121d8575f80fd5b50919050565b5f602082840312156121ee575f80fd5b81356001600160401b03811115612203575f80fd5b611222848285016121c7565b5f8060408385031215612220575f80fd5b50508035926020909101359150565b815181526020808301516001600160a01b031690820152604081016105fc565b5f805f60608486031215612261575f80fd5b83359250602084013561227381612119565b929592945050506040919091013590565b5f805f60608486031215612296575f80fd5b505081359360208301359350604090920135919050565b5f8083601f8401126122bd575f80fd5b5081356001600160401b038111156122d3575f80fd5b6020830191508360208260051b85010111156122ed575f80fd5b9250929050565b5f805f805f8086880360a081121561230a575f80fd5b8735965060208801356001600160401b0380821115612327575f80fd5b6123338b838c016122ad565b90985096508691506040603f198401121561234c575f80fd5b60408a01955060808a0135925080831115612365575f80fd5b505061237389828a016122ad565b979a9699509497509295939492505050565b5f8060408385031215612396575f80fd5b82356123a181612119565b915060208301356123b181612119565b809150509250929050565b5f80604083850312156123cd575f80fd5b823563ffffffff811681146123a1575f80fd5b5f80604083850312156123f1575f80fd5b8235915060208301356001600160401b0381111561240d575f80fd5b612419858286016121c7565b9150509250929050565b5f60208284031215612433575f80fd5b5051919050565b60208082526027908201527f54656c65706f727465724d657373656e6765723a207a65726f20626c6f636b636040820152661a185a5b88125160ca1b606082015260800190565b60208082526023908201527f5265656e7472616e63794775617264733a2073656e646572207265656e7472616040820152626e637960e81b606082015260800190565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156124fa576124fa6124c4565b60405290565b60405160c081016001600160401b03811182821017156124fa576124fa6124c4565b60405161010081016001600160401b03811182821017156124fa576124fa6124c4565b604051601f8201601f191681016001600160401b038111828210171561256d5761256d6124c4565b604052919050565b5f60408284031215612585575f80fd5b61258d6124d8565b9050813561259a81612119565b808252506020820135602082015292915050565b5f6001600160401b038211156125c6576125c66124c4565b5060051b60200190565b5f82601f8301126125df575f80fd5b813560206125f46125ef836125ae565b612545565b8083825260208201915060208460051b870101935086841115612615575f80fd5b602086015b8481101561263a57803561262d81612119565b835291830191830161261a565b509695505050505050565b5f6001600160401b0382111561265d5761265d6124c4565b50601f01601f191660200190565b5f82601f83011261267a575f80fd5b81356126886125ef82612645565b81815284602083860101111561269c575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60e082360312156126c8575f80fd5b6126d0612500565b823581526126e06020840161212d565b60208201526126f23660408501612575565b60408201526080830135606082015260a08301356001600160401b038082111561271a575f80fd5b612726368387016125d0565b608084015260c085013591508082111561273e575f80fd5b5061274b3682860161266b565b60a08301525092915050565b60208082526026908201527f54656c65706f727465724d657373656e6765723a206d657373616765206e6f7460408201526508199bdd5b9960d21b606082015260800190565b5f808335601e198436030181126127b2575f80fd5b83016020810192503590506001600160401b038111156127d0575f80fd5b8060051b36038213156122ed575f80fd5b8183525f60208085019450825f5b8581101561281d57813561280281612119565b6001600160a01b0316875295820195908201906001016127ef565b509495945050505050565b5f808335601e1984360301811261283d575f80fd5b83016020810192503590506001600160401b0381111561285b575f80fd5b8060061b36038213156122ed575f80fd5b8183525f60208085019450825f5b8581101561281d57813587528282013561289381612119565b6001600160a01b031687840152604096870196919091019060010161287a565b5f808335601e198436030181126128c8575f80fd5b83016020810192503590506001600160401b038111156128e6575f80fd5b8036038213156122ed575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f61010082358452602083013561293281612119565b6001600160a01b03166020850152604083810135908501526129566060840161212d565b6001600160a01b031660608501526080838101359085015261297b60a084018461279d565b8260a087015261298e83870182846127e1565b9250505061299f60c0840184612828565b85830360c08701526129b283828461286c565b925050506129c360e08401846128b3565b85830360e0870152611f3d8382846128f4565b602081525f6108af602083018461291c565b60208082526029908201527f54656c65706f727465724d657373656e6765723a20696e76616c6964206d65736040820152680e6c2ceca40d0c2e6d60bb1b606082015260800190565b606081525f612a43606083018561291c565b90506108af602083018480516001600160a01b03168252602090810151910152565b5f5b83811015612a7f578181015183820152602001612a67565b50505f910152565b5f8151808452612a9e816020860160208601612a65565b601f01601f19169290920160200192915050565b602081525f6108af6020830184612a87565b60208082526025908201527f5265656e7472616e63794775617264733a207265636569766572207265656e7460408201526472616e637960d81b606082015260800190565b60208082526034908201527f54656c65706f727465724d657373656e6765723a207a65726f2066656520617360408201527373657420636f6e7472616374206164647265737360601b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b808201808211156105fc576105fc612b5d565b634e487b7160e01b5f52603260045260245ffd5b5f60408284031215612ba8575f80fd5b6108af8383612575565b80516104ee81612119565b5f82601f830112612bcc575f80fd5b8151612bda6125ef82612645565b818152846020838601011115612bee575f80fd5b611222826020830160208701612a65565b805180151581146104ee575f80fd5b5f8060408385031215612c1f575f80fd5b82516001600160401b0380821115612c35575f80fd5b9084019060608287031215612c48575f80fd5b604051606081018181108382111715612c6357612c636124c4565b604052825181526020830151612c7881612119565b6020820152604083015182811115612c8e575f80fd5b612c9a88828601612bbd565b6040830152509350612cb191505060208401612bff565b90509250929050565b5f82601f830112612cc9575f80fd5b81516020612cd96125ef836125ae565b8083825260208201915060208460051b870101935086841115612cfa575f80fd5b602086015b8481101561263a578051612d1281612119565b8352918301918301612cff565b5f82601f830112612d2e575f80fd5b81516020612d3e6125ef836125ae565b82815260069290921b84018101918181019086841115612d5c575f80fd5b8286015b8481101561263a5760408189031215612d77575f80fd5b612d7f6124d8565b8151815284820151612d9081612119565b81860152835291830191604001612d60565b5f60208284031215612db2575f80fd5b81516001600160401b0380821115612dc8575f80fd5b908301906101008286031215612ddc575f80fd5b612de4612522565b82518152612df460208401612bb2565b602082015260408301516040820152612e0f60608401612bb2565b60608201526080830151608082015260a083015182811115612e2f575f80fd5b612e3b87828601612cba565b60a08301525060c083015182811115612e52575f80fd5b612e5e87828601612d1f565b60c08301525060e083015182811115612e75575f80fd5b612e8187828601612bbd565b60e08301525095945050505050565b5f815180845260208085019450602084015f5b8381101561281d5781516001600160a01b031687529582019590820190600101612ea3565b5f815180845260208085019450602084015f5b8381101561281d57612f01878351805182526020908101516001600160a01b0316910152565b6040969096019590820190600101612edb565b5f6101008251845260018060a01b036020840151166020850152604083015160408501526060830151612f5260608601826001600160a01b03169052565b506080830151608085015260a08301518160a0860152612f7482860182612e90565b91505060c083015184820360c0860152612f8e8282612ec8565b91505060e083015184820360e0860152612fa88282612a87565b95945050505050565b6001600160a01b03831681526040602082018190525f9061122290830184612f14565b5f808335601e19843603018112612fe9575f80fd5b8301803591506001600160401b03821115613002575f80fd5b6020019150368190038213156122ed575f80fd5b8481526001600160a01b03841660208201526060604082018190525f90611f3d90830184866128f4565b818103818111156105fc576105fc612b5d565b5f6001820161306457613064612b5d565b5060010190565b602081525f6108af6020830184612f14565b606081525f612a436060830185612f14565b81516001600160a01b0316815260208083015190820152604081016105fc565b8381526001600160a01b03831660208201526060604082018190525f90612fa890830184612a87565b5f602082840312156130e8575f80fd5b6108af82612bff565b5f8251613102818460208701612a65565b919091019291505056fea164736f6c6343000819000a",
    "sourceMap": "1378:37425:45:-:0;;;;;;;;;;;;-1:-1:-1;882:1:85;1982:12;:27;;;2019:30;;1378:37425:45;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b5060043610610148575f3560e01c8063a8898181116100bf578063df20e8bc11610079578063df20e8bc14610331578063e69d606a14610344578063e6e67bd5146103ab578063ebc3b1ba146103e6578063ecc7042814610409578063fc2d619714610412575f80fd5b8063a8898181146102a9578063a9a85614146102bc578063b771b3bc146102cf578063c473eef8146102dd578063ccb5f80914610315578063d127dc9b14610328575f80fd5b8063399b77da11610110578063399b77da1461021257806362448850146102315780638245a1b014610244578063860a3b0614610257578063892bf412146102765780638ac0fd0414610296575f80fd5b80630af5b4ff1461014c57806322296c3a146101675780632bc8b0bf1461017c5780632ca40f551461018f5780632e27c223146101e7575b5f80fd5b610154610425565b6040519081526020015b60405180910390f35b61017a610175366004612138565b6104f3565b005b61015461018a366004612153565b6105e6565b6101d961019d366004612153565b600560209081525f9182526040918290208054835180850190945260018201546001600160a01b03168452600290910154918301919091529082565b60405161015e92919061216a565b6101fa6101f5366004612153565b610602565b6040516001600160a01b03909116815260200161015e565b610154610220366004612153565b5f9081526005602052604090205490565b61015461023f366004612191565b610689565b61017a6102523660046121de565b6106e2565b610154610265366004612153565b60066020525f908152604090205481565b61028961028436600461220f565b610885565b60405161015e919061222f565b61017a6102a436600461224f565b6108b6565b6101546102b7366004612284565b610aed565b6101546102ca3660046122f4565b610b2f565b6101fa6005600160991b0181565b6101546102eb366004612385565b6001600160a01b039182165f90815260096020908152604080832093909416825291909152205490565b61017a6103233660046123bc565b610dc1565b61015460025481565b61015461033f366004612153565b6111e3565b61038c610352366004612153565b5f90815260056020908152604091829020825180840190935260018101546001600160a01b03168084526002909101549290910182905291565b604080516001600160a01b03909316835260208301919091520161015e565b6103d16103b9366004612153565b60046020525f90815260409020805460019091015482565b6040805192835260208301919091520161015e565b6103f96103f4366004612153565b61122a565b604051901515815260200161015e565b61015460035481565b61017a6104203660046123e0565b61123f565b6002545f90806104ee576005600160991b016001600160a01b0316634213cf786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610472573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104969190612423565b9050806104be5760405162461bcd60e51b81526004016104b59061243a565b60405180910390fd5b600281905560405181907f1eac640109dc937d2a9f42735a05f794b39a5e3759d681951d671aabbce4b104905f90a25b919050565b335f9081526009602090815260408083206001600160a01b0385168452909152902054806105745760405162461bcd60e51b815260206004820152602860248201527f54656c65706f727465724d657373656e6765723a206e6f2072657761726420746044820152676f2072656465656d60c01b60648201526084016104b5565b335f8181526009602090815260408083206001600160a01b03871680855290835281842093909355518481529192917f3294c84e5b0f29d9803655319087207bc94f4db29f7927846944822773780b88910160405180910390a36105e26001600160a01b0383163383611494565b5050565b5f8181526004602052604081206105fc906114f8565b92915050565b5f8181526007602052604081205461066e5760405162461bcd60e51b815260206004820152602960248201527f54656c65706f727465724d657373656e6765723a206d657373616765206e6f74604482015268081c9958d95a5d995960ba1b60648201526084016104b5565b505f908152600860205260409020546001600160a01b031690565b5f60015f54146106ab5760405162461bcd60e51b81526004016104b590612481565b60025f556106d86106bb836126b8565b83355f9081526004602052604090206106d39061150a565b611604565b60015f5592915050565b60015f54146107035760405162461bcd60e51b81526004016104b590612481565b60025f818155905461071b9060408401358435610aed565b5f818152600560209081526040918290208251808401845281548152835180850190945260018201546001600160a01b0316845260029091015483830152908101919091528051919250906107825760405162461bcd60e51b81526004016104b590612757565b5f8360405160200161079491906129d6565b60408051601f19818403018152919052825181516020830120919250146107cd5760405162461bcd60e51b81526004016104b5906129e8565b8360400135837f2a211ad4a59ab9d003852404f9c57c690704ee755f3c79d2c2812ad32da99df8868560200151604051610808929190612a31565b60405180910390a360405163ee5b48eb60e01b81526005600160991b019063ee5b48eb9061083a908490600401612ab2565b6020604051808303815f875af1158015610856573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061087a9190612423565b505060015f55505050565b604080518082019091525f80825260208201525f8381526004602052604090206108af9083611837565b9392505050565b60015f54146108d75760405162461bcd60e51b81526004016104b590612481565b60025f5560018054146108fc5760405162461bcd60e51b81526004016104b590612ac4565b6002600155806109665760405162461bcd60e51b815260206004820152602f60248201527f54656c65706f727465724d657373656e6765723a207a65726f2061646469746960448201526e1bdb985b0819995948185b5bdd5b9d608a1b60648201526084016104b5565b6001600160a01b03821661098c5760405162461bcd60e51b81526004016104b590612b09565b5f838152600560205260409020546109b65760405162461bcd60e51b81526004016104b590612757565b5f838152600560205260409020600101546001600160a01b03838116911614610a475760405162461bcd60e51b815260206004820152603760248201527f54656c65706f727465724d657373656e6765723a20696e76616c69642066656560448201527f20617373657420636f6e7472616374206164647265737300000000000000000060648201526084016104b5565b5f610a5283836118f8565b5f85815260056020526040812060020180549293508392909190610a77908490612b71565b90915550505f8481526005602052604090819020905185917fc1bfd1f1208927dfbd414041dcb5256e6c9ad90dd61aec3249facbd34ff7b3e191610ad8916001019081546001600160a01b0316815260019190910154602082015260400190565b60405180910390a2505060018080555f555050565b6040805130602082015290810184905260608101839052608081018290525f9060a0016040516020818303038152906040528051906020012090509392505050565b5f60015f5414610b515760405162461bcd60e51b81526004016104b590612481565b60025f818155905490866001600160401b03811115610b7257610b726124c4565b604051908082528060200260200182016040528015610bb657816020015b604080518082019091525f8082526020820152815260200190600190039081610b905790505b509050865f5b81811015610d2e575f8a8a83818110610bd757610bd7612b84565b9050602002013590505f60075f8381526020019081526020015f20549050805f03610c535760405162461bcd60e51b815260206004820152602660248201527f54656c65706f727465724d657373656e6765723a2072656365697074206e6f7460448201526508199bdd5b9960d21b60648201526084016104b5565b610c5e8d8783610aed565b8214610cd25760405162461bcd60e51b815260206004820152603a60248201527f54656c65706f727465724d657373656e6765723a206d6573736167652049442060448201527f6e6f742066726f6d20736f7572636520626c6f636b636861696e00000000000060648201526084016104b5565b5f828152600860209081526040918290205482518084019093528383526001600160a01b03169082018190528651909190879086908110610d1557610d15612b84565b6020026020010181905250505050806001019050610bbc565b506040805160c0810182528b81525f6020820152610daf918101610d57368b90038b018b612b98565b81526020015f81526020018888808060200260200160405190810160405280939291908181526020018383602002808284375f9201829052509385525050604080519283526020808401909152909201525083611604565b60015f559a9950505050505050505050565b6001805414610de25760405162461bcd60e51b81526004016104b590612ac4565b60026001556040516306f8253560e41b815263ffffffff831660048201525f9081906005600160991b0190636f825350906024015f60405180830381865afa158015610e30573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610e579190810190612c0e565b9150915080610eba5760405162461bcd60e51b815260206004820152602960248201527f54656c65706f727465724d657373656e6765723a20696e76616c69642077617260448201526870206d65737361676560b81b60648201526084016104b5565b60208201516001600160a01b03163014610f315760405162461bcd60e51b815260206004820152603260248201527f54656c65706f727465724d657373656e6765723a20696e76616c6964206f726960448201527167696e2073656e646572206164647265737360701b60648201526084016104b5565b5f8260400151806020019051810190610f4a9190612da2565b90505f610f55610425565b905080826040015114610fc45760405162461bcd60e51b815260206004820152603160248201527f54656c65706f727465724d657373656e6765723a20696e76616c6964206465736044820152701d1a5b985d1a5bdb8818da185a5b881251607a1b60648201526084016104b5565b835182515f91610fd5918490610aed565b5f81815260076020526040902054909150156110495760405162461bcd60e51b815260206004820152602d60248201527f54656c65706f727465724d657373656e6765723a206d65737361676520616c7260448201526c1958591e481c9958d95a5d9959609a1b60648201526084016104b5565b611057338460a00151611904565b6110b55760405162461bcd60e51b815260206004820152602960248201527f54656c65706f727465724d657373656e6765723a20756e617574686f72697a6560448201526832103932b630bcb2b960b91b60648201526084016104b5565b6110c281845f0151611970565b6001600160a01b038616156110f8575f81815260086020526040902080546001600160a01b0319166001600160a01b0388161790555b60c0830151515f5b8181101561113b5761113384885f01518760c00151848151811061112657611126612b84565b60200260200101516119e0565b600101611100565b50604080518082018252855181526001600160a01b03891660208083019190915288515f90815260049091529190912061117491611b04565b336001600160a01b0316865f0151837f292ee90bbaf70b5d4936025e09d56ba08f3e421156b6a568cf3c2840d9343e348a886040516111b4929190612fb1565b60405180910390a460e084015151156111d5576111d582875f015186611b5e565b505060018055505050505050565b6002545f90806112055760405162461bcd60e51b81526004016104b59061243a565b5f60035460016112159190612b71565b9050611222828583610aed565b949350505050565b5f8181526007602052604081205415156105fc565b60018054146112605760405162461bcd60e51b81526004016104b590612ac4565b60026001819055545f906112779084908435610aed565b5f81815260066020526040902054909150806112a55760405162461bcd60e51b81526004016104b590612757565b80836040516020016112b791906129d6565b60405160208183030381529060405280519060200120146112ea5760405162461bcd60e51b81526004016104b5906129e8565b5f6112fb6080850160608601612138565b6001600160a01b03163b1161136f5760405162461bcd60e51b815260206004820152603460248201527f54656c65706f727465724d657373656e6765723a2064657374696e6174696f6e604482015273206164647265737320686173206e6f20636f646560601b60648201526084016104b5565b604051849083907f34795cc6b122b9a0ae684946319f1e14a577b4e8f9b3dda9ac94c21a54d3188c905f90a35f82815260066020908152604080832083905586916113be918701908701612138565b6113cb60e0870187612fd4565b6040516024016113de9493929190613016565b60408051601f198184030181529190526020810180516001600160e01b031663643477d560e11b17905290505f61142561141e6080870160608801612138565b5a84611c8d565b9050806114885760405162461bcd60e51b815260206004820152602b60248201527f54656c65706f727465724d657373656e6765723a20726574727920657865637560448201526a1d1a5bdb8819985a5b195960aa1b60648201526084016104b5565b50506001805550505050565b6040516001600160a01b038381166024830152604482018390526114f391859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611ca4565b505050565b805460018201545f916105fc91613040565b60605f611520600561151b856114f8565b611d05565b9050805f0361156c57604080515f8082526020820190925290611564565b604080518082019091525f808252602082015281526020019060019003908161153e5790505b509392505050565b5f816001600160401b03811115611585576115856124c4565b6040519080825280602002602001820160405280156115c957816020015b604080518082019091525f80825260208201528152602001906001900390816115a35790505b5090505f5b82811015611564576115df85611d1a565b8282815181106115f1576115f1612b84565b60209081029190910101526001016115ce565b5f8061160e610425565b90505f60035f815461161f90613053565b91905081905590505f61163683875f015184610aed565b90505f604051806101000160405280848152602001336001600160a01b03168152602001885f0151815260200188602001516001600160a01b0316815260200188606001518152602001886080015181526020018781526020018860a0015181525090505f816040516020016116ac919061306b565b60405160208183030381529060405290505f808960400151602001511115611713576040890151516001600160a01b03166116f95760405162461bcd60e51b81526004016104b590612b09565b6040890151805160209091015161171091906118f8565b90505b6040805180820182528a820151516001600160a01b03908116825260208083018590528351808501855286518783012081528082018481525f8a815260058452869020915182555180516001830180546001600160a01b03191691909516179093559101516002909101558a51915190919086907f2a211ad4a59ab9d003852404f9c57c690704ee755f3c79d2c2812ad32da99df8906117b6908890869061307d565b60405180910390a360405163ee5b48eb60e01b81526005600160991b019063ee5b48eb906117e8908690600401612ab2565b6020604051808303815f875af1158015611804573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118289190612423565b50939998505050505050505050565b604080518082019091525f8082526020820152611853836114f8565b82106118ab5760405162461bcd60e51b815260206004820152602160248201527f5265636569707451756575653a20696e646578206f7574206f6620626f756e646044820152607360f81b60648201526084016104b5565b826002015f83855f01546118bf9190612b71565b815260208082019290925260409081015f20815180830190925280548252600101546001600160a01b0316918101919091529392505050565b5f6108af833384611de4565b5f81515f03611915575060016105fc565b81515f5b8181101561196657846001600160a01b031684828151811061193d5761193d612b84565b60200260200101516001600160a01b03160361195e576001925050506105fc565b600101611919565b505f949350505050565b805f036119cf5760405162461bcd60e51b815260206004820152602760248201527f54656c65706f727465724d657373656e6765723a207a65726f206d657373616760448201526665206e6f6e636560c81b60648201526084016104b5565b5f9182526007602052604090912055565b5f6119ef8484845f0151610aed565b5f818152600560209081526040918290208251808401845281548152835180850190945260018201546001600160a01b031684526002909101548383015290810191909152805191925090611a45575050505050565b5f8281526005602090815260408083208381556001810180546001600160a01b03191690556002018390558382018051830151878401516001600160a01b0390811686526009855283862092515116855292528220805491929091611aab908490612b71565b9250508190555082602001516001600160a01b031684837fd13a7935f29af029349bed0a2097455b91fd06190a30478c575db3f31e00bf578460200151604051611af5919061308f565b60405180910390a45050505050565b600182018054829160028501915f9182611b1d83613053565b9091555081526020808201929092526040015f2082518155910151600190910180546001600160a01b0319166001600160a01b039092169190911790555050565b80608001515a1015611bc05760405162461bcd60e51b815260206004820152602560248201527f54656c65706f727465724d657373656e6765723a20696e73756666696369656e604482015264742067617360d81b60648201526084016104b5565b80606001516001600160a01b03163b5f03611be0576114f3838383611f47565b602081015160e08201516040515f92611bfd9286926024016130af565b60408051601f198184030181529190526020810180516001600160e01b031663643477d560e11b179052606083015160808401519192505f91611c41919084611c8d565b905080611c5a57611c53858585611f47565b5050505050565b604051849086907f34795cc6b122b9a0ae684946319f1e14a577b4e8f9b3dda9ac94c21a54d3188c905f90a35050505050565b5f805f808451602086015f8989f195945050505050565b5f611cb86001600160a01b03841683611fbb565b905080515f14158015611cdc575080806020019051810190611cda91906130d8565b155b156114f357604051635274afe760e01b81526001600160a01b03841660048201526024016104b5565b5f818310611d1357816108af565b5090919050565b604080518082019091525f808252602082015281546001830154819003611d835760405162461bcd60e51b815260206004820152601960248201527f5265636569707451756575653a20656d7074792071756575650000000000000060448201526064016104b5565b5f8181526002840160208181526040808420815180830190925280548252600180820180546001600160a01b03811685870152888852959094529490556001600160a01b0319909216905590611dda908390612b71565b9093555090919050565b6040516370a0823160e01b81523060048201525f9081906001600160a01b038616906370a0823190602401602060405180830381865afa158015611e2a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e4e9190612423565b9050611e656001600160a01b038616853086611fc8565b6040516370a0823160e01b81523060048201525f906001600160a01b038716906370a0823190602401602060405180830381865afa158015611ea9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ecd9190612423565b9050818111611f335760405162461bcd60e51b815260206004820152602c60248201527f5361666545524332305472616e7366657246726f6d3a2062616c616e6365206e60448201526b1bdd081a5b98dc99585cd95960a21b60648201526084016104b5565b611f3d8282613040565b9695505050505050565b80604051602001611f58919061306b565b60408051601f1981840301815282825280516020918201205f878152600690925291902055829084907f4619adc1017b82e02eaefac01a43d50d6d8de4460774bc370c3ff0210d40c98590611fae90859061306b565b60405180910390a3505050565b60606108af83835f612007565b6040516001600160a01b0384811660248301528381166044830152606482018390526120019186918216906323b872dd906084016114c1565b50505050565b60608147101561202c5760405163cd78605960e01b81523060048201526024016104b5565b5f80856001600160a01b0316848660405161204791906130f1565b5f6040518083038185875af1925050503d805f8114612081576040519150601f19603f3d011682016040523d82523d5f602084013e612086565b606091505b5091509150611f3d8683836060826120a6576120a1826120ed565b6108af565b81511580156120bd57506001600160a01b0384163b155b156120e657604051639996b31560e01b81526001600160a01b03851660048201526024016104b5565b50806108af565b8051156120fd5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b6001600160a01b0381168114612116575f80fd5b80356104ee81612119565b5f60208284031215612148575f80fd5b81356108af81612119565b5f60208284031215612163575f80fd5b5035919050565b828152606081016108af602083018480516001600160a01b03168252602090810151910152565b5f602082840312156121a1575f80fd5b81356001600160401b038111156121b6575f80fd5b820160e081850312156108af575f80fd5b5f61010082840312156121d8575f80fd5b50919050565b5f602082840312156121ee575f80fd5b81356001600160401b03811115612203575f80fd5b611222848285016121c7565b5f8060408385031215612220575f80fd5b50508035926020909101359150565b815181526020808301516001600160a01b031690820152604081016105fc565b5f805f60608486031215612261575f80fd5b83359250602084013561227381612119565b929592945050506040919091013590565b5f805f60608486031215612296575f80fd5b505081359360208301359350604090920135919050565b5f8083601f8401126122bd575f80fd5b5081356001600160401b038111156122d3575f80fd5b6020830191508360208260051b85010111156122ed575f80fd5b9250929050565b5f805f805f8086880360a081121561230a575f80fd5b8735965060208801356001600160401b0380821115612327575f80fd5b6123338b838c016122ad565b90985096508691506040603f198401121561234c575f80fd5b60408a01955060808a0135925080831115612365575f80fd5b505061237389828a016122ad565b979a9699509497509295939492505050565b5f8060408385031215612396575f80fd5b82356123a181612119565b915060208301356123b181612119565b809150509250929050565b5f80604083850312156123cd575f80fd5b823563ffffffff811681146123a1575f80fd5b5f80604083850312156123f1575f80fd5b8235915060208301356001600160401b0381111561240d575f80fd5b612419858286016121c7565b9150509250929050565b5f60208284031215612433575f80fd5b5051919050565b60208082526027908201527f54656c65706f727465724d657373656e6765723a207a65726f20626c6f636b636040820152661a185a5b88125160ca1b606082015260800190565b60208082526023908201527f5265656e7472616e63794775617264733a2073656e646572207265656e7472616040820152626e637960e81b606082015260800190565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156124fa576124fa6124c4565b60405290565b60405160c081016001600160401b03811182821017156124fa576124fa6124c4565b60405161010081016001600160401b03811182821017156124fa576124fa6124c4565b604051601f8201601f191681016001600160401b038111828210171561256d5761256d6124c4565b604052919050565b5f60408284031215612585575f80fd5b61258d6124d8565b9050813561259a81612119565b808252506020820135602082015292915050565b5f6001600160401b038211156125c6576125c66124c4565b5060051b60200190565b5f82601f8301126125df575f80fd5b813560206125f46125ef836125ae565b612545565b8083825260208201915060208460051b870101935086841115612615575f80fd5b602086015b8481101561263a57803561262d81612119565b835291830191830161261a565b509695505050505050565b5f6001600160401b0382111561265d5761265d6124c4565b50601f01601f191660200190565b5f82601f83011261267a575f80fd5b81356126886125ef82612645565b81815284602083860101111561269c575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60e082360312156126c8575f80fd5b6126d0612500565b823581526126e06020840161212d565b60208201526126f23660408501612575565b60408201526080830135606082015260a08301356001600160401b038082111561271a575f80fd5b612726368387016125d0565b608084015260c085013591508082111561273e575f80fd5b5061274b3682860161266b565b60a08301525092915050565b60208082526026908201527f54656c65706f727465724d657373656e6765723a206d657373616765206e6f7460408201526508199bdd5b9960d21b606082015260800190565b5f808335601e198436030181126127b2575f80fd5b83016020810192503590506001600160401b038111156127d0575f80fd5b8060051b36038213156122ed575f80fd5b8183525f60208085019450825f5b8581101561281d57813561280281612119565b6001600160a01b0316875295820195908201906001016127ef565b509495945050505050565b5f808335601e1984360301811261283d575f80fd5b83016020810192503590506001600160401b0381111561285b575f80fd5b8060061b36038213156122ed575f80fd5b8183525f60208085019450825f5b8581101561281d57813587528282013561289381612119565b6001600160a01b031687840152604096870196919091019060010161287a565b5f808335601e198436030181126128c8575f80fd5b83016020810192503590506001600160401b038111156128e6575f80fd5b8036038213156122ed575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f61010082358452602083013561293281612119565b6001600160a01b03166020850152604083810135908501526129566060840161212d565b6001600160a01b031660608501526080838101359085015261297b60a084018461279d565b8260a087015261298e83870182846127e1565b9250505061299f60c0840184612828565b85830360c08701526129b283828461286c565b925050506129c360e08401846128b3565b85830360e0870152611f3d8382846128f4565b602081525f6108af602083018461291c565b60208082526029908201527f54656c65706f727465724d657373656e6765723a20696e76616c6964206d65736040820152680e6c2ceca40d0c2e6d60bb1b606082015260800190565b606081525f612a43606083018561291c565b90506108af602083018480516001600160a01b03168252602090810151910152565b5f5b83811015612a7f578181015183820152602001612a67565b50505f910152565b5f8151808452612a9e816020860160208601612a65565b601f01601f19169290920160200192915050565b602081525f6108af6020830184612a87565b60208082526025908201527f5265656e7472616e63794775617264733a207265636569766572207265656e7460408201526472616e637960d81b606082015260800190565b60208082526034908201527f54656c65706f727465724d657373656e6765723a207a65726f2066656520617360408201527373657420636f6e7472616374206164647265737360601b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b808201808211156105fc576105fc612b5d565b634e487b7160e01b5f52603260045260245ffd5b5f60408284031215612ba8575f80fd5b6108af8383612575565b80516104ee81612119565b5f82601f830112612bcc575f80fd5b8151612bda6125ef82612645565b818152846020838601011115612bee575f80fd5b611222826020830160208701612a65565b805180151581146104ee575f80fd5b5f8060408385031215612c1f575f80fd5b82516001600160401b0380821115612c35575f80fd5b9084019060608287031215612c48575f80fd5b604051606081018181108382111715612c6357612c636124c4565b604052825181526020830151612c7881612119565b6020820152604083015182811115612c8e575f80fd5b612c9a88828601612bbd565b6040830152509350612cb191505060208401612bff565b90509250929050565b5f82601f830112612cc9575f80fd5b81516020612cd96125ef836125ae565b8083825260208201915060208460051b870101935086841115612cfa575f80fd5b602086015b8481101561263a578051612d1281612119565b8352918301918301612cff565b5f82601f830112612d2e575f80fd5b81516020612d3e6125ef836125ae565b82815260069290921b84018101918181019086841115612d5c575f80fd5b8286015b8481101561263a5760408189031215612d77575f80fd5b612d7f6124d8565b8151815284820151612d9081612119565b81860152835291830191604001612d60565b5f60208284031215612db2575f80fd5b81516001600160401b0380821115612dc8575f80fd5b908301906101008286031215612ddc575f80fd5b612de4612522565b82518152612df460208401612bb2565b602082015260408301516040820152612e0f60608401612bb2565b60608201526080830151608082015260a083015182811115612e2f575f80fd5b612e3b87828601612cba565b60a08301525060c083015182811115612e52575f80fd5b612e5e87828601612d1f565b60c08301525060e083015182811115612e75575f80fd5b612e8187828601612bbd565b60e08301525095945050505050565b5f815180845260208085019450602084015f5b8381101561281d5781516001600160a01b031687529582019590820190600101612ea3565b5f815180845260208085019450602084015f5b8381101561281d57612f01878351805182526020908101516001600160a01b0316910152565b6040969096019590820190600101612edb565b5f6101008251845260018060a01b036020840151166020850152604083015160408501526060830151612f5260608601826001600160a01b03169052565b506080830151608085015260a08301518160a0860152612f7482860182612e90565b91505060c083015184820360c0860152612f8e8282612ec8565b91505060e083015184820360e0860152612fa88282612a87565b95945050505050565b6001600160a01b03831681526040602082018190525f9061122290830184612f14565b5f808335601e19843603018112612fe9575f80fd5b8301803591506001600160401b03821115613002575f80fd5b6020019150368190038213156122ed575f80fd5b8481526001600160a01b03841660208201526060604082018190525f90611f3d90830184866128f4565b818103818111156105fc576105fc612b5d565b5f6001820161306457613064612b5d565b5060010190565b602081525f6108af6020830184612f14565b606081525f612a436060830185612f14565b81516001600160a01b0316815260208083015190820152604081016105fc565b8381526001600160a01b03831660208201526060604082018190525f90612fa890830184612a87565b5f602082840312156130e8575f80fd5b6108af82612bff565b5f8251613102818460208701612a65565b919091019291505056fea164736f6c6343000819000a",
    "sourceMap": "1378:37425:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25797:449;;;:::i;:::-;;;160:25:160;;;148:2;133:18;25797:449:45;;;;;;;;22343:805;;;;;;:::i;:::-;;:::i;:::-;;25087:167;;;;;;:::i;:::-;;:::i;3424:80::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3424:80:45;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;23623:247::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1906:32:160;;;1888:51;;1876:2;1861:18;23623:247:45;1742:203:160;23210:151:45;;;;;;:::i;:::-;23290:7;23316:26;;;:15;:26;;;;;:38;;23210:151;5493:540;;;;;;:::i;:::-;;:::i;6296:1704::-;;;;;;:::i;:::-;;:::i;3889:84::-;;;;;;:::i;:::-;;;;;;;;;;;;;;25316:230;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8672:1963::-;;;;;;:::i;:::-;;:::i;26446:288::-;;;;;;:::i;:::-;;:::i;19932:2267::-;;;;;;:::i;:::-;;:::i;1920:114::-;;-1:-1:-1;;;;;1920:114:45;;23932:187;;;;;;:::i;:::-;-1:-1:-1;;;;;24072:30:45;;;24046:7;24072:30;;;:21;:30;;;;;;;;:40;;;;;;;;;;;;;23932:187;11428:3633;;;;;;:::i;:::-;;:::i;2301:27::-;;;;;;24632:393;;;;;;:::i;:::-;;:::i;24181:238::-;;;;;;:::i;:::-;24257:7;24320:26;;;:15;:26;;;;;;;;;24285:69;;;;;;;;24320:34;;;24285:69;-1:-1:-1;;;;;24285:69:45;;;;;;;;;;;;;;;;;24181:238;;;;;-1:-1:-1;;;;;7000:32:160;;;6982:51;;7064:2;7049:18;;7042:34;;;;6955:18;24181:238:45;6808:274:160;3040:123:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7261:25:160;;;7317:2;7302:18;;7295:34;;;;7234:18;3040:123:45;7087:248:160;23423:138:45;;;;;;:::i;:::-;;:::i;:::-;;;7505:14:160;;7498:22;7480:41;;7468:2;7453:18;23423:138:45;7340:187:160;2718:27:45;;;;;;15892:3029;;;;;;:::i;:::-;;:::i;25797:449::-;25890:12;;25847:7;;25890:12;25912:298;;-1:-1:-1;;;;;;;;;;25975:30:45;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25959:48;-1:-1:-1;25959:48:45;26021:79;;;;-1:-1:-1;;;26021:79:45;;;;;;;:::i;:::-;;;;;;;;;26114:12;:28;;;26161:38;;26129:13;;26161:38;;;;;25912:298;26226:13;25797:449;-1:-1:-1;25797:449:45:o;22343:805::-;22469:10;22424:20;22447:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;22447:43:45;;;;;;;;;;22508:16;22500:69;;;;-1:-1:-1;;;22500:69:45;;8781:2:160;22500:69:45;;;8763:21:160;8820:2;8800:18;;;8793:30;8859:34;8839:18;;;8832:62;-1:-1:-1;;;8910:18:160;;;8903:38;8958:19;;22500:69:45;8579:404:160;22500:69:45;22749:10;22727:33;;;;:21;:33;;;;;;;;-1:-1:-1;;;;;22727:43:45;;;;;;;;;;;22720:50;;;;22786:58;160:25:160;;;22727:43:45;;22749:10;22786:58;;133:18:160;22786:58:45;;;;;;;23086:55;-1:-1:-1;;;;;23086:29:45;;23116:10;23128:12;23086:29;:55::i;:::-;22414:734;22343:805;:::o;25087:167::-;25181:7;25207:33;;;:13;:33;;;;;:40;;:38;:40::i;:::-;25200:47;25087:167;-1:-1:-1;;25087:167:45:o;23623:247::-;23712:7;38756:33;;;:22;:33;;;;;;23731:81;;;;-1:-1:-1;;;23731:81:45;;9190:2:160;23731:81:45;;;9172:21:160;9229:2;9209:18;;;9202:30;9268:34;9248:18;;;9241:62;-1:-1:-1;;;9319:18:160;;;9312:39;9368:19;;23731:81:45;8988:405:160;23731:81:45;-1:-1:-1;23829:34:45;;;;:23;:34;;;;;;-1:-1:-1;;;;;23829:34:45;;23623:247::o;5493:540::-;5621:7;882:1:85;1309:12;;:28;1301:76;;;;-1:-1:-1;;;1301:76:85;;;;;;;:::i;:::-;926:1;1387:12;:23;5872:154:45::1;;5908:12:::0;5872:154:::1;:::i;:::-;5948:36:::0;::::1;5934:51;::::0;;;:13:::1;:51;::::0;;;;:82:::1;::::0;:80:::1;:82::i;:::-;5872:22;:154::i;:::-;882:1:85::0;1431:12;:27;5865:161:45;5493:540;-1:-1:-1;;5493:540:45:o;6296:1704::-;882:1:85;1309:12;;:28;1301:76;;;;-1:-1:-1;;;1301:76:85;;;;;;;:::i;:::-;926:1;1387:12;:23;;;6792:12:45;;6773:87:::1;::::0;6806:31:::1;::::0;::::1;;6839:20:::0;::::1;6773:18;:87::i;:::-;6920:42;6965:26:::0;;;:15:::1;:26;::::0;;;;;;;;6920:71;;;;::::1;::::0;;;;;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;6920:71:45::1;::::0;;;;;;;;;::::1;::::0;;;::::1;::::0;;;;7090:31;;6741:119;;-1:-1:-1;6920:71:45;7069:118:::1;;;;-1:-1:-1::0;;;7069:118:45::1;;;;;;;:::i;:::-;7300:25;7339:7;7328:19;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;7328:19:45;;::::1;::::0;;;;;;7405:31;;7378:23;;7328:19:::1;7378:23:::0;::::1;::::0;7328:19;;-1:-1:-1;7378:58:45::1;7357:146;;;;-1:-1:-1::0;;;7357:146:45::1;;;;;;;:::i;:::-;7723:7;:31;;;7712:9;7677:125;7756:7;7765:19;:27;;;7677:125;;;;;;;:::i;:::-;;;;;;;;7949:44;::::0;-1:-1:-1;;;7949:44:45;;-1:-1:-1;;;;;1991:42:45;7949:30:::1;::::0;:44:::1;::::0;7980:12;;7949:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;882:1:85;1431:12;:27;-1:-1:-1;;;6296:1704:45:o;25316:230::-;-1:-1:-1;;;;;;;;;;;;;;;;;25481:33:45;;;;:13;:33;;;;;:58;;25533:5;25481:51;:58::i;:::-;25474:65;25316:230;-1:-1:-1;;;25316:230:45:o;8672:1963::-;882:1:85;1309:12;;:28;1301:76;;;;-1:-1:-1;;;1301:76:85;;;;;;;:::i;:::-;926:1;1387:12;:23;882:1:::1;1785:15:::0;;:31:::1;1777:81;;;;-1:-1:-1::0;;;1777:81:85::1;;;;;;;:::i;:::-;926:1;1868:15;:26:::0;8919:23:45;8911:83:::2;;;::::0;-1:-1:-1;;;8911:83:45;;21336:2:160;8911:83:45::2;::::0;::::2;21318:21:160::0;21375:2;21355:18;;;21348:30;21414:34;21394:18;;;21387:62;-1:-1:-1;;;21465:18:160;;;21458:45;21520:19;;8911:83:45::2;21134:411:160::0;8911:83:45::2;-1:-1:-1::0;;;;;9097:29:45;::::2;9076:116;;;;-1:-1:-1::0;;;9076:116:45::2;;;;;;;:::i;:::-;9514:1;9464:26:::0;;;:15:::2;:26;::::0;;;;:38;9443:137:::2;;;;-1:-1:-1::0;;;9443:137:45::2;;;;;;;:::i;:::-;10060:26;::::0;;;:15:::2;:26;::::0;;;;:34:::2;;:50:::0;-1:-1:-1;;;;;10060:69:45;;::::2;:50:::0;::::2;:69;10039:171;;;::::0;-1:-1:-1;;;10039:171:45;;22173:2:160;10039:171:45::2;::::0;::::2;22155:21:160::0;22212:2;22192:18;;;22185:30;22251:34;22231:18;;;22224:62;22322:25;22302:18;;;22295:53;22365:19;;10039:171:45::2;21971:419:160::0;10039:171:45::2;10296:22;10333:84;10379:15;10397:19;10333:38;:84::i;:::-;10494:26;::::0;;;:15:::2;:26;::::0;;;;:41;;:59;;10296:121;;-1:-1:-1;10296:121:45;;10494:41;;:26;:59:::2;::::0;10296:121;;10494:59:::2;:::i;:::-;::::0;;;-1:-1:-1;;10593:26:45::2;::::0;;;:15:::2;:26;::::0;;;;;;10569:59;;10582:9;;10569:59:::2;::::0;::::2;::::0;10593:34:::2;;::::0;22894:13:160;;-1:-1:-1;;;;;22890:39:160;22872:58;;22926:1;22974:17;;;;22968:24;22961:4;22946:20;;22939:54;22860:2;22845:18;;22657:342;10569:59:45::2;;;;;;;;-1:-1:-1::0;;882:1:85::1;1915:30:::0;;;1431:12;:27;-1:-1:-1;;8672:1963:45:o;26446:288::-;26649:77;;;26668:4;26649:77;;;23235:51:160;23302:18;;;23295:34;;;23345:18;;;23338:34;;;23388:18;;;23381:34;;;26601:7:45;;23207:19:160;;26649:77:45;;;;;;;;;;;;26639:88;;;;;;26620:107;;26446:288;;;;;:::o;19932:2267::-;20177:7;882:1:85;1309:12;;:28;1301:76;;;;-1:-1:-1;;;1301:76:85;;;;;;;:::i;:::-;926:1;1387:12;:23;;;20470:12:45;;;20685:10;-1:-1:-1;;;;;20654:49:45;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;20654:49:45::1;;;;;;;;;;;;;;;-1:-1:-1::0;20591:112:45;-1:-1:-1;20730:10:45;20713:14:::1;20757:1012;20777:6;20773:1;:10;20757:1012;;;20804:25;20832:10;;20843:1;20832:13;;;;;;;:::i;:::-;;;;;;;20804:41;;20910:28;20941:22;:41;20964:17;20941:41;;;;;;;;;;;;20910:72;;21004:20;21028:1;21004:25:::0;20996:76:::1;;;::::0;-1:-1:-1;;;20996:76:45;;23760:2:160;20996:76:45::1;::::0;::::1;23742:21:160::0;23799:2;23779:18;;;23772:30;23838:34;23818:18;;;23811:62;-1:-1:-1;;;23889:18:160;;;23882:36;23935:19;;20996:76:45::1;23558:402:160::0;20996:76:45::1;21245:75;21264:18;21284:13;21299:20;21245:18;:75::i;:::-;21204:17;:116;21179:233;;;::::0;-1:-1:-1;;;21179:233:45;;24167:2:160;21179:233:45::1;::::0;::::1;24149:21:160::0;24206:2;24186:18;;;24179:30;24245:34;24225:18;;;24218:62;24316:28;24296:18;;;24289:56;24362:19;;21179:233:45::1;23965:422:160::0;21179:233:45::1;21490:28;21521:42:::0;;;:23:::1;:42;::::0;;;;;;;;;21598:160;;;;::::1;::::0;;;;;;-1:-1:-1;;;;;21521:42:45::1;21598:160:::0;;::::1;::::0;;;21578:17;;21521:42;;21598:160;21578:14;;21593:1;;21578:17;::::1;;;;;:::i;:::-;;;;;;:180;;;;20790:979;;;20785:3;;;;;20757:1012;;;-1:-1:-1::0;21822:332:45::1;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;21822:332:45::1;::::0;::::1;::::0;21786:406:::1;::::0;21822:332;;::::1;;::::0;;::::1;::::0;::::1;21981:7:::0;21822:332:::1;:::i;:::-;;;;;22032:1;21822:332;;;;22077:23;;21822:332;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;21822:332:45;;;-1:-1:-1;;22127:12:45::1;::::0;;;;;21822:332:::1;22127:12:::0;;::::1;::::0;;;21822:332;;::::1;::::0;-1:-1:-1;22168:14:45;21786:22:::1;:406::i;:::-;882:1:85::0;1431:12;:27;21779:413:45;19932:2267;-1:-1:-1;;;;;;;;;;19932:2267:45:o;11428:3633::-;882:1:85;1785:15;;:31;1777:81;;;;-1:-1:-1;;;1777:81:85;;;;;;;:::i;:::-;926:1;1868:15;:26;11774:51:45::1;::::0;-1:-1:-1;;;11774:51:45;;24819:10:160;24807:23;;11774:51:45::1;::::0;::::1;24789:42:160::0;11714:30:45::1;::::0;;;-1:-1:-1;;;;;1991:42:45;11774:37:::1;::::0;24762:18:160;;11774:51:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;11774:51:45::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;11713:112;;;;11843:7;11835:61;;;::::0;-1:-1:-1;;;11835:61:45;;26825:2:160;11835:61:45::1;::::0;::::1;26807:21:160::0;26864:2;26844:18;;;26837:30;26903:34;26883:18;;;26876:62;-1:-1:-1;;;26954:18:160;;;26947:39;27003:19;;11835:61:45::1;26623:405:160::0;11835:61:45::1;12364:31;::::0;::::1;::::0;-1:-1:-1;;;;;12364:48:45::1;12407:4;12364:48;12343:145;;;::::0;-1:-1:-1;;;12343:145:45;;27235:2:160;12343:145:45::1;::::0;::::1;27217:21:160::0;27274:2;27254:18;;;27247:30;27313:34;27293:18;;;27286:62;-1:-1:-1;;;27364:18:160;;;27357:48;27422:19;;12343:145:45::1;27033:414:160::0;12343:145:45::1;12544:42;12612:11;:19;;;12601:52;;;;;;;;;;;;:::i;:::-;12544:109;;12734:21;12758:24;:22;:24::i;:::-;12734:48;;12929:13;12884:17;:41;;;:58;12863:154;;;::::0;-1:-1:-1;;;12863:154:45;;30709:2:160;12863:154:45::1;::::0;::::1;30691:21:160::0;30748:2;30728:18;;;30721:30;30787:34;30767:18;;;30760:62;-1:-1:-1;;;30838:18:160;;;30831:47;30895:19;;12863:154:45::1;30507:413:160::0;12863:154:45::1;13181:25:::0;;13223:30;;13129:17:::1;::::0;13149:114:::1;::::0;13208:13;;13149:18:::1;:114::i;:::-;38733:4:::0;38756:33;;;:22;:33;;;;;;13129:134;;-1:-1:-1;38756:38:45;13344:86:::1;;;::::0;-1:-1:-1;;;13344:86:45;;31127:2:160;13344:86:45::1;::::0;::::1;31109:21:160::0;31166:2;31146:18;;;31139:30;31205:34;31185:18;;;31178:62;-1:-1:-1;;;31256:18:160;;;31249:43;31309:19;;13344:86:45::1;30925:409:160::0;13344:86:45::1;13531:77;13554:10;13566:17;:41;;;13531:22;:77::i;:::-;13510:165;;;::::0;-1:-1:-1;;;13510:165:45;;31541:2:160;13510:165:45::1;::::0;::::1;31523:21:160::0;31580:2;31560:18;;;31553:30;31619:34;31599:18;;;31592:62;-1:-1:-1;;;31670:18:160;;;31663:39;31719:19;;13510:165:45::1;31339:405:160::0;13510:165:45::1;13727:63;13748:9;13759:17;:30;;;13727:20;:63::i;:::-;-1:-1:-1::0;;;;;13862:34:45;::::1;::::0;13858:122:::1;;13912:34;::::0;;;:23:::1;:34;::::0;;;;:57;;-1:-1:-1;;;;;;13912:57:45::1;-1:-1:-1::0;;;;;13912:57:45;::::1;;::::0;;13858:122:::1;14164:26;::::0;::::1;::::0;:33;14147:14:::1;14207:143;14227:6;14223:1;:10;14207:143;;;14254:85;14267:13;14282:11;:25;;;14309:17;:26;;;14336:1;14309:29;;;;;;;;:::i;:::-;;;;;;;14254:12;:85::i;:::-;14235:3;;14207:143;;;-1:-1:-1::0;14477:170:45::1;::::0;;;;::::1;::::0;;14542:30;;14477:170;;-1:-1:-1;;;;;14477:170:45;::::1;;::::0;;::::1;::::0;;;;14429:25;;-1:-1:-1;14415:40:45;;;:13:::1;:40:::0;;;;;;;:242:::1;::::0;:48:::1;:242::i;:::-;14773:10;-1:-1:-1::0;;;;;14673:185:45::1;14734:11;:25;;;14711:9;14673:185;14797:20;14831:17;14673:185;;;;;;;:::i;:::-;;;;;;;;14905:25;::::0;::::1;::::0;:32;:36;14901:154:::1;;14957:87;14988:9;14999:11;:25;;;15026:17;14957:30;:87::i;:::-;-1:-1:-1::0;;882:1:85;1915:30;;-1:-1:-1;;;;;;11428:3633:45:o;24632:393::-;24771:12;;24728:7;;24771:12;24793:79;;;;-1:-1:-1;;;24793:79:45;;;;;;;:::i;:::-;24882:24;24909:12;;24924:1;24909:16;;;;:::i;:::-;24882:43;;24942:76;24961:13;24976:23;25001:16;24942:18;:76::i;:::-;24935:83;24632:393;-1:-1:-1;;;;24632:393:45:o;23423:138::-;23504:4;38756:33;;;:22;:33;;;;;;:38;;23527:27;38652:149;15892:3029;882:1:85;1785:15;;:31;1777:81;;;;-1:-1:-1;;;1777:81:85;;;;;;;:::i;:::-;926:1;1868:15;:26;;;16469:12:45;16398:17:::1;::::0;16430:74:::1;::::0;16449:18;;16483:20;::::1;16430:18;:74::i;:::-;16637:25;16665:38:::0;;;:27:::1;:38;::::0;;;;;16398:106;;-1:-1:-1;16665:38:45;16713:82:::1;;;;-1:-1:-1::0;;;16713:82:45::1;;;;;;;:::i;:::-;16860:17;16847:7;16836:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;16826:30;;;;;;:51;16805:139;;;;-1:-1:-1::0;;;16805:139:45::1;;;;;;;:::i;:::-;17203:1;17162:26;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;17162:38:45::1;;:42;17141:141;;;::::0;-1:-1:-1;;;17141:141:45;;34286:2:160;17141:141:45::1;::::0;::::1;34268:21:160::0;34325:2;34305:18;;;34298:30;34364:34;34344:18;;;34337:62;-1:-1:-1;;;34415:18:160;;;34408:50;34475:19;;17141:141:45::1;34084:416:160::0;17141:141:45::1;17471:46;::::0;17498:18;;17487:9;;17471:46:::1;::::0;;;::::1;17534:60;::::0;;;:27:::1;:60;::::0;;;;;;;17527:67;;;18060:18;;18080:27:::1;::::0;;;;;::::1;;:::i;:::-;18109:15;;::::0;::::1;:7:::0;:15:::1;:::i;:::-;17973:162;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;17973:162:45;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;17973:162:45::1;-1:-1:-1::0;;;17973:162:45::1;::::0;;;-1:-1:-1;;18775:66:45::1;18794:26;::::0;;;::::1;::::0;::::1;;:::i;:::-;18822:9;18833:7;18775:18;:66::i;:::-;18760:81;;18859:7;18851:63;;;::::0;-1:-1:-1;;;18851:63:45;;35650:2:160;18851:63:45::1;::::0;::::1;35632:21:160::0;35689:2;35669:18;;;35662:30;35728:34;35708:18;;;35701:62;-1:-1:-1;;;35779:18:160;;;35772:41;35830:19;;18851:63:45::1;35448:407:160::0;18851:63:45::1;-1:-1:-1::0;;882:1:85;1915:30;;-1:-1:-1;;;;15892:3029:45:o;1303:160:152:-;1412:43;;-1:-1:-1;;;;;7000:32:160;;;1412:43:152;;;6982:51:160;7049:18;;;7042:34;;;1385:71:152;;1405:5;;1427:14;;;;;6955:18:160;;1412:43:152;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1412:43:152;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;3064:153:44:-;3199:11;;3186:10;;;;3160:7;;3186:24;;;:::i;2321:652::-;2436:33;2583:18;2604:45;1318:1;2637:11;2642:5;2637:4;:11::i;:::-;2604:8;:45::i;:::-;2583:66;;2663:10;2677:1;2663:15;2659:86;;2701:33;;;2732:1;2701:33;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2701:33:44;;;;;;;;;;;;;;;-1:-1:-1;2694:40:44;2321:652;-1:-1:-1;;;2321:652:44:o;2659:86::-;2755:42;2831:10;-1:-1:-1;;;;;2800:42:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2800:42:44;;;;;;;;;;;;;;;;2755:87;;2857:9;2852:90;2872:10;2868:1;:14;2852:90;;;2917:14;2925:5;2917:7;:14::i;:::-;2903:8;2912:1;2903:11;;;;;;;;:::i;:::-;;;;;;;;;;:28;2884:3;;2852:90;;27751:3075:45;27910:7;27999:21;28023:24;:22;:24::i;:::-;27999:48;;28132:21;28158:12;;28156:14;;;;;:::i;:::-;;;;;;;28132:38;;28180:17;28212:86;28231:13;28246:12;:36;;;28284:13;28212:18;:86::i;:::-;28180:118;;28357:42;28402:466;;;;;;;;28448:13;28402:466;;;;28496:10;-1:-1:-1;;;;;28402:466:45;;;;;28545:12;:36;;;28402:466;;;;28615:12;:31;;;-1:-1:-1;;;;;28402:466:45;;;;;28678:12;:29;;;28402:466;;;;28746:12;:36;;;28402:466;;;;28806:8;28402:466;;;;28837:12;:20;;;28402:466;;;28357:511;;28878:35;28927:17;28916:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;28878:67;;29419:25;29488:1;29458:12;:20;;;:27;;;:31;29454:497;;;29626:20;;;;:36;-1:-1:-1;;;;;29626:50:45;29601:161;;;;-1:-1:-1;;;29601:161:45;;;;;;;:::i;:::-;29860:20;;;;:36;;29899:27;;;;;29797:143;;29860:36;29797:38;:143::i;:::-;29777:163;;29454:497;30231:135;;;;;;;;30280:20;;;;:36;-1:-1:-1;;;;;30231:135:45;;;;;;;;;;;;30405:125;;;;;;;30448:33;;;;;;30405:125;;;;;;;;-1:-1:-1;30376:26:45;;;:15;:26;;;;;:154;;;;;;;;;;;;-1:-1:-1;;;;;;30376:154:45;;;;;;;;;;;;;;;;;30592:36;;30546:128;;30231:135;;30592:36;30376:26;;30546:128;;;;30630:17;;30231:135;;30546:128;:::i;:::-;;;;;;;;30738:54;;-1:-1:-1;;;30738:54:45;;-1:-1:-1;;;;;1991:42:45;30738:30;;:54;;30769:22;;30738:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;30810:9:45;;27751:3075;-1:-1:-1;;;;;;;;;27751:3075:45:o;3304:295:44:-;-1:-1:-1;;;;;;;;;;;;;;;;;3495:11:44;3500:5;3495:4;:11::i;:::-;3487:5;:19;3479:65;;;;-1:-1:-1;;;3479:65:44;;37097:2:160;3479:65:44;;;37079:21:160;37136:2;37116:18;;;37109:30;37175:34;37155:18;;;37148:62;-1:-1:-1;;;37226:18:160;;;37219:31;37267:19;;3479:65:44;36895:397:160;3479:65:44;3561:5;:10;;:31;3586:5;3572;:11;;;:19;;;;:::i;:::-;3561:31;;;;;;;;;;;;;;-1:-1:-1;3561:31:44;3554:38;;;;;;;;;;;;;;;-1:-1:-1;;;;;3554:38:44;;;;;;;;;3304:295;-1:-1:-1;;;3304:295:44:o;1332:150:86:-;1406:7;1432:43;1449:5;1456:10;1468:6;1432:16;:43::i;26837:625:45:-;26974:4;27084:15;:22;27110:1;27084:27;27080:69;;-1:-1:-1;27134:4:45;27127:11;;27080:69;27257:22;;27240:14;27289:145;27309:6;27305:1;:10;27289:145;;;27362:16;-1:-1:-1;;;;;27340:38:45;:15;27356:1;27340:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;27340:38:45;;27336:88;;27405:4;27398:11;;;;;;27336:88;27317:3;;27289:145;;;-1:-1:-1;27450:5:45;;26837:625;-1:-1:-1;;;;26837:625:45:o;31105:226::-;31203:13;31220:1;31203:18;31195:70;;;;-1:-1:-1;;;31195:70:45;;37499:2:160;31195:70:45;;;37481:21:160;37538:2;37518:18;;;37511:30;37577:34;37557:18;;;37550:62;-1:-1:-1;;;37628:18:160;;;37621:37;37675:19;;31195:70:45;37297:403:160;31195:70:45;31275:33;;;;:22;:33;;;;;;:49;31105:226::o;31853:1467::-;32027:17;32047:117;32079:19;32100:24;32126:7;:28;;;32047:18;:117::i;:::-;32255:34;32292:26;;;:15;:26;;;;;;;;;32255:63;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;32255:63:45;;;;;;;;;;;;;;;;;;;32693:23;;32027:137;;-1:-1:-1;32255:63:45;32689:74;;32746:7;;31853:1467;;;:::o;32689:74::-;32870:26;;;;:15;:26;;;;;;;;32863:33;;;;;;;;-1:-1:-1;;;;;;32863:33:45;;;;;;;;33146:19;;;;;:26;;;33064:28;;;;-1:-1:-1;;;;;33042:51:45;;;;;:21;:51;;;;;33094:19;;:35;33042:88;;;;;;;:130;;33146:26;;33042:88;;:130;;33146:26;;33042:130;:::i;:::-;;;;;;;;33254:7;:28;;;-1:-1:-1;;;;;33188:125:45;33228:24;33217:9;33188:125;33284:11;:19;;;33188:125;;;;;;:::i;:::-;;;;;;;;32017:1303;;31853:1467;;;:::o;1438:185:44:-;1593:10;;;:12;;1609:7;;1582:10;;;;:24;;;1593:12;;;:::i;:::-;;;;-1:-1:-1;1582:24:44;;;;;;;;;;;;-1:-1:-1;1582:24:44;:34;;;;;;;;;;;;;-1:-1:-1;;;;;;1582:34:44;-1:-1:-1;;;;;1582:34:44;;;;;;;;;-1:-1:-1;;1438:185:44:o;34038:2476:45:-;34713:7;:24;;;34700:9;:37;;34692:87;;;;-1:-1:-1;;;34692:87:45;;38190:2:160;34692:87:45;;;38172:21:160;38229:2;38209:18;;;38202:30;38268:34;38248:18;;;38241:62;-1:-1:-1;;;38319:18:160;;;38312:35;38364:19;;34692:87:45;37988:401:160;34692:87:45;35120:7;:26;;;-1:-1:-1;;;;;35120:38:45;;35162:1;35120:43;35116:162;;35179:68;35208:9;35219:18;35239:7;35179:28;:68::i;35116:162::-;35573:27;;;;35602:15;;;;35466:162;;35443:20;;35466:162;;35553:18;;35466:162;;;:::i;:::-;;;;-1:-1:-1;;35466:162:45;;;;;;;;;;;;;;-1:-1:-1;;;;;35466:162:45;-1:-1:-1;;;35466:162:45;;;35904:26;;;;35932:24;;;;35466:162;;-1:-1:-1;;;35885:81:45;;35904:26;35466:162;35885:18;:81::i;:::-;35858:108;;36324:7;36319:127;;36347:68;36376:9;36387:18;36407:7;36347:28;:68::i;:::-;36429:7;;34038:2476;;;:::o;36319:127::-;36461:46;;36488:18;;36477:9;;36461:46;;;;;34197:2317;;34038:2476;;;:::o;36520:1342::-;36651:4;37118:12;37788:1;37755;37596:7;37590:14;37423:4;37414:7;37410:18;37373:1;37330:6;37272:8;37246:576;37219:603;36520:1342;-1:-1:-1;;;;;36520:1342:45:o;4059:629:152:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:152;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:152;;-1:-1:-1;;;;;1906:32:160;;4631:40:152;;;1888:51:160;1861:18;;4631:40:152;1742:203:160;2557:104:156;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;-1:-1:-1;2649:1:156;;2557:104;-1:-1:-1;2557:104:156:o;1778:403:44:-;-1:-1:-1;;;;;;;;;;;;;;;;;1932:11:44;;1961:10;;;;:20;;;1953:58;;;;-1:-1:-1;;;1953:58:44;;39193:2:160;1953:58:44;;;39175:21:160;39232:2;39212:18;;;39205:30;39271:27;39251:18;;;39244:55;39316:18;;1953:58:44;38991:349:160;1953:58:44;2021:39;2063:18;;;:10;;;:18;;;;;;;;2021:60;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2021:60:44;;;;;;2098:18;;;;;;;2091:25;;;-1:-1:-1;;;;;;2091:25:44;;;;;2021:60;2140:10;;2074:6;;2140:10;:::i;:::-;2126:24;;;-1:-1:-1;2167:7:44;;1778:403;-1:-1:-1;1778:403:44:o;2254:464:86:-;2415:30;;-1:-1:-1;;;2415:30:86;;2439:4;2415:30;;;1888:51:160;2372:7:86;;;;-1:-1:-1;;;;;2415:15:86;;;;;1861:18:160;;2415:30:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2391:54;-1:-1:-1;2455:51:86;-1:-1:-1;;;;;2455:22:86;;2478:4;2492;2499:6;2455:22;:51::i;:::-;2539:30;;-1:-1:-1;;;2539:30:86;;2563:4;2539:30;;;1888:51:160;2516:20:86;;-1:-1:-1;;;;;2539:15:86;;;;;1861:18:160;;2539:30:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2516:53;;2603:13;2588:12;:28;2580:85;;;;-1:-1:-1;;;2580:85:86;;39736:2:160;2580:85:86;;;39718:21:160;39775:2;39755:18;;;39748:30;39814:34;39794:18;;;39787:62;-1:-1:-1;;;39865:18:160;;;39858:42;39917:19;;2580:85:86;39534:408:160;2580:85:86;2683:28;2698:13;2683:12;:28;:::i;:::-;2676:35;2254:464;-1:-1:-1;;;;;;2254:464:86:o;38070:418:45:-;38299:7;38288:19;;;;;;;;:::i;:::-;;;;-1:-1:-1;;38288:19:45;;;;;;;;;38278:30;;38288:19;38278:30;;;;38237:38;;;;:27;:38;;;;;;:71;38453:18;;38265:9;;38419:62;;;;38473:7;;38419:62;:::i;:::-;;;;;;;;38070:418;;;:::o;2705:151:153:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;1702:188:152:-;1829:53;;-1:-1:-1;;;;;40205:15:160;;;1829:53:152;;;40187:34:160;40257:15;;;40237:18;;;40230:43;40289:18;;;40282:34;;;1802:81:152;;1822:5;;1844:18;;;;;40122::160;;1829:53:152;39947:375:160;1802:81:152;1702:188;;;;:::o;3180:392:153:-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:153;;3394:4;3359:41;;;1888:51:160;1861:18;;3359:41:153;1742:203:160;3303:108:153;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:153;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:153;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:153;;-1:-1:-1;;;;;1906:32:160;;5121:24:153;;;1888:51:160;1861:18;;5121:24:153;1742:203:160;5041:119:153;-1:-1:-1;5180:10:153;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:153;;;;;;;;;;;5870:383;5743:516;:::o;196:131:160:-;-1:-1:-1;;;;;271:31:160;;261:42;;251:70;;317:1;314;307:12;332:134;400:20;;429:31;400:20;429:31;:::i;471:247::-;530:6;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;638:9;625:23;657:31;682:5;657:31;:::i;723:180::-;782:6;835:2;823:9;814:7;810:23;806:32;803:52;;;851:1;848;841:12;803:52;-1:-1:-1;874:23:160;;723:180;-1:-1:-1;723:180:160:o;1388:349::-;1634:25;;;1622:2;1607:18;;1668:63;1727:2;1712:18;;1704:6;1286:12;;-1:-1:-1;;;;;1282:38:160;1270:51;;1370:4;1359:16;;;1353:23;1337:14;;1330:47;1199:184;1950:403;2052:6;2105:2;2093:9;2084:7;2080:23;2076:32;2073:52;;;2121:1;2118;2111:12;2073:52;2161:9;2148:23;-1:-1:-1;;;;;2186:6:160;2183:30;2180:50;;;2226:1;2223;2216:12;2180:50;2249:22;;2305:3;2287:16;;;2283:26;2280:46;;;2322:1;2319;2312:12;2358:166;2428:5;2473:3;2464:6;2459:3;2455:16;2451:26;2448:46;;;2490:1;2487;2480:12;2448:46;-1:-1:-1;2512:6:160;2358:166;-1:-1:-1;2358:166:160:o;2529:377::-;2626:6;2679:2;2667:9;2658:7;2654:23;2650:32;2647:52;;;2695:1;2692;2685:12;2647:52;2735:9;2722:23;-1:-1:-1;;;;;2760:6:160;2757:30;2754:50;;;2800:1;2797;2790:12;2754:50;2823:77;2892:7;2883:6;2872:9;2868:22;2823:77;:::i;2911:248::-;2979:6;2987;3040:2;3028:9;3019:7;3015:23;3011:32;3008:52;;;3056:1;3053;3046:12;3008:52;-1:-1:-1;;3079:23:160;;;3149:2;3134:18;;;3121:32;;-1:-1:-1;2911:248:160:o;3360:299::-;3254:12;;3242:25;;3320:4;3309:16;;;3303:23;-1:-1:-1;;;;;3299:49:160;3283:14;;;3276:73;3580:2;3565:18;;3592:61;3164:191;3664:383;3741:6;3749;3757;3810:2;3798:9;3789:7;3785:23;3781:32;3778:52;;;3826:1;3823;3816:12;3778:52;3862:9;3849:23;3839:33;;3922:2;3911:9;3907:18;3894:32;3935:31;3960:5;3935:31;:::i;:::-;3664:383;;3985:5;;-1:-1:-1;;;4037:2:160;4022:18;;;;4009:32;;3664:383::o;4052:316::-;4129:6;4137;4145;4198:2;4186:9;4177:7;4173:23;4169:32;4166:52;;;4214:1;4211;4204:12;4166:52;-1:-1:-1;;4237:23:160;;;4307:2;4292:18;;4279:32;;-1:-1:-1;4358:2:160;4343:18;;;4330:32;;4052:316;-1:-1:-1;4052:316:160:o;4373:367::-;4436:8;4446:6;4500:3;4493:4;4485:6;4481:17;4477:27;4467:55;;4518:1;4515;4508:12;4467:55;-1:-1:-1;4541:20:160;;-1:-1:-1;;;;;4573:30:160;;4570:50;;;4616:1;4613;4606:12;4570:50;4653:4;4645:6;4641:17;4629:29;;4713:3;4706:4;4696:6;4693:1;4689:14;4681:6;4677:27;4673:38;4670:47;4667:67;;;4730:1;4727;4720:12;4667:67;4373:367;;;;;:::o;4745:1010::-;4923:6;4931;4939;4947;4955;4963;5007:9;4998:7;4994:23;5037:3;5033:2;5029:12;5026:32;;;5054:1;5051;5044:12;5026:32;5090:9;5077:23;5067:33;;5151:2;5140:9;5136:18;5123:32;-1:-1:-1;;;;;5215:2:160;5207:6;5204:14;5201:34;;;5231:1;5228;5221:12;5201:34;5270:70;5332:7;5323:6;5312:9;5308:22;5270:70;:::i;:::-;5359:8;;-1:-1:-1;5244:96:160;-1:-1:-1;5244:96:160;;-1:-1:-1;5428:2:160;-1:-1:-1;;5410:16:160;;5406:25;5403:45;;;5444:1;5441;5434:12;5403:45;5482:2;5471:9;5467:18;5457:28;;5538:3;5527:9;5523:19;5510:33;5494:49;;5568:2;5558:8;5555:16;5552:36;;;5584:1;5581;5574:12;5552:36;;;5623:72;5687:7;5676:8;5665:9;5661:24;5623:72;:::i;:::-;4745:1010;;;;-1:-1:-1;4745:1010:160;;-1:-1:-1;4745:1010:160;;5714:8;;4745:1010;-1:-1:-1;;;4745:1010:160:o;5993:388::-;6061:6;6069;6122:2;6110:9;6101:7;6097:23;6093:32;6090:52;;;6138:1;6135;6128:12;6090:52;6177:9;6164:23;6196:31;6221:5;6196:31;:::i;:::-;6246:5;-1:-1:-1;6303:2:160;6288:18;;6275:32;6316:33;6275:32;6316:33;:::i;:::-;6368:7;6358:17;;;5993:388;;;;;:::o;6386:417::-;6453:6;6461;6514:2;6502:9;6493:7;6489:23;6485:32;6482:52;;;6530:1;6527;6520:12;6482:52;6569:9;6556:23;6619:10;6612:5;6608:22;6601:5;6598:33;6588:61;;6645:1;6642;6635:12;7532:445;7638:6;7646;7699:2;7687:9;7678:7;7674:23;7670:32;7667:52;;;7715:1;7712;7705:12;7667:52;7751:9;7738:23;7728:33;;7812:2;7801:9;7797:18;7784:32;-1:-1:-1;;;;;7831:6:160;7828:30;7825:50;;;7871:1;7868;7861:12;7825:50;7894:77;7963:7;7954:6;7943:9;7939:22;7894:77;:::i;:::-;7884:87;;;7532:445;;;;;:::o;7982:184::-;8052:6;8105:2;8093:9;8084:7;8080:23;8076:32;8073:52;;;8121:1;8118;8111:12;8073:52;-1:-1:-1;8144:16:160;;7982:184;-1:-1:-1;7982:184:160:o;8171:403::-;8373:2;8355:21;;;8412:2;8392:18;;;8385:30;8451:34;8446:2;8431:18;;8424:62;-1:-1:-1;;;8517:2:160;8502:18;;8495:37;8564:3;8549:19;;8171:403::o;9398:399::-;9600:2;9582:21;;;9639:2;9619:18;;;9612:30;9678:34;9673:2;9658:18;;9651:62;-1:-1:-1;;;9744:2:160;9729:18;;9722:33;9787:3;9772:19;;9398:399::o;9802:127::-;9863:10;9858:3;9854:20;9851:1;9844:31;9894:4;9891:1;9884:15;9918:4;9915:1;9908:15;9934:257;10006:4;10000:11;;;10038:17;;-1:-1:-1;;;;;10070:34:160;;10106:22;;;10067:62;10064:88;;;10132:18;;:::i;:::-;10168:4;10161:24;9934:257;:::o;10196:253::-;10268:2;10262:9;10310:4;10298:17;;-1:-1:-1;;;;;10330:34:160;;10366:22;;;10327:62;10324:88;;;10392:18;;:::i;10454:255::-;10526:2;10520:9;10568:6;10556:19;;-1:-1:-1;;;;;10590:34:160;;10626:22;;;10587:62;10584:88;;;10652:18;;:::i;10714:275::-;10785:2;10779:9;10850:2;10831:13;;-1:-1:-1;;10827:27:160;10815:40;;-1:-1:-1;;;;;10870:34:160;;10906:22;;;10867:62;10864:88;;;10932:18;;:::i;:::-;10968:2;10961:22;10714:275;;-1:-1:-1;10714:275:160:o;10994:365::-;11058:5;11106:4;11094:9;11089:3;11085:19;11081:30;11078:50;;;11124:1;11121;11114:12;11078:50;11146:22;;:::i;:::-;11137:31;;11205:9;11192:23;11224:33;11249:7;11224:33;:::i;:::-;11280:7;11273:5;11266:22;;11348:2;11337:9;11333:18;11320:32;11315:2;11308:5;11304:14;11297:56;10994:365;;;;:::o;11364:183::-;11424:4;-1:-1:-1;;;;;11449:6:160;11446:30;11443:56;;;11479:18;;:::i;:::-;-1:-1:-1;11524:1:160;11520:14;11536:4;11516:25;;11364:183::o;11552:743::-;11606:5;11659:3;11652:4;11644:6;11640:17;11636:27;11626:55;;11677:1;11674;11667:12;11626:55;11713:6;11700:20;11739:4;11763:60;11779:43;11819:2;11779:43;:::i;:::-;11763:60;:::i;:::-;11845:3;11869:2;11864:3;11857:15;11897:4;11892:3;11888:14;11881:21;;11954:4;11948:2;11945:1;11941:10;11933:6;11929:23;11925:34;11911:48;;11982:3;11974:6;11971:15;11968:35;;;11999:1;11996;11989:12;11968:35;12035:4;12027:6;12023:17;12049:217;12065:6;12060:3;12057:15;12049:217;;;12145:3;12132:17;12162:31;12187:5;12162:31;:::i;:::-;12206:18;;12244:12;;;;12082;;12049:217;;;-1:-1:-1;12284:5:160;11552:743;-1:-1:-1;;;;;;11552:743:160:o;12300:186::-;12348:4;-1:-1:-1;;;;;12373:6:160;12370:30;12367:56;;;12403:18;;:::i;:::-;-1:-1:-1;12469:2:160;12448:15;-1:-1:-1;;12444:29:160;12475:4;12440:40;;12300:186::o;12491:462::-;12533:5;12586:3;12579:4;12571:6;12567:17;12563:27;12553:55;;12604:1;12601;12594:12;12553:55;12640:6;12627:20;12671:48;12687:31;12715:2;12687:31;:::i;12671:48::-;12744:2;12735:7;12728:19;12790:3;12783:4;12778:2;12770:6;12766:15;12762:26;12759:35;12756:55;;;12807:1;12804;12797:12;12756:55;12872:2;12865:4;12857:6;12853:17;12846:4;12837:7;12833:18;12820:55;12920:1;12895:16;;;12913:4;12891:27;12884:38;;;;12899:7;12491:462;-1:-1:-1;;;12491:462:160:o;12958:1000::-;13092:9;13151:4;13143:5;13127:14;13123:26;13119:37;13116:57;;;13169:1;13166;13159:12;13116:57;13197:22;;:::i;:::-;13257:5;13244:19;13235:7;13228:36;13298:34;13328:2;13321:5;13317:14;13298:34;:::i;:::-;13293:2;13284:7;13280:16;13273:60;13367:67;13419:14;13414:2;13407:5;13403:14;13367:67;:::i;:::-;13362:2;13353:7;13349:16;13342:93;13495:3;13488:5;13484:15;13471:29;13464:4;13455:7;13451:18;13444:57;13548:3;13541:5;13537:15;13524:29;-1:-1:-1;;;;;13613:2:160;13605:6;13602:14;13599:34;;;13629:1;13626;13619:12;13599:34;13668:64;13717:14;13708:6;13701:5;13697:18;13668:64;:::i;:::-;13662:3;13653:7;13649:17;13642:91;13782:4;13775:5;13771:16;13758:30;13742:46;;13813:2;13803:8;13800:16;13797:36;;;13829:1;13826;13819:12;13797:36;;13868:54;13907:14;13896:8;13889:5;13885:20;13868:54;:::i;:::-;13862:3;13849:17;;13842:81;-1:-1:-1;13853:7:160;12958:1000;-1:-1:-1;;12958:1000:160:o;13963:402::-;14165:2;14147:21;;;14204:2;14184:18;;;14177:30;14243:34;14238:2;14223:18;;14216:62;-1:-1:-1;;;14309:2:160;14294:18;;14287:36;14355:3;14340:19;;13963:402::o;14370:520::-;14440:5;14447:6;14507:3;14494:17;14593:2;14589:7;14578:8;14562:14;14558:29;14554:43;14534:18;14530:68;14520:96;;14612:1;14609;14602:12;14520:96;14640:33;;14744:4;14731:18;;;-1:-1:-1;14692:21:160;;-1:-1:-1;;;;;;14761:30:160;;14758:50;;;14804:1;14801;14794:12;14758:50;14858:6;14855:1;14851:14;14835;14831:35;14824:5;14820:47;14817:67;;;14880:1;14877;14870:12;14895:524;14995:6;14990:3;14983:19;14965:3;15021:4;15050;15045:3;15041:14;15034:21;;15078:5;15101:1;15111:283;15125:6;15122:1;15119:13;15111:283;;;15202:6;15189:20;15222:33;15247:7;15222:33;:::i;:::-;-1:-1:-1;;;;;15280:33:160;15268:46;;15334:12;;;;15369:15;;;;15310:1;15140:9;15111:283;;;-1:-1:-1;15410:3:160;;14895:524;-1:-1:-1;;;;;14895:524:160:o;15424:553::-;15527:5;15534:6;15594:3;15581:17;15680:2;15676:7;15665:8;15649:14;15645:29;15641:43;15621:18;15617:68;15607:96;;15699:1;15696;15689:12;15607:96;15727:33;;15831:4;15818:18;;;-1:-1:-1;15779:21:160;;-1:-1:-1;;;;;;15848:30:160;;15845:50;;;15891:1;15888;15881:12;15845:50;15945:6;15942:1;15938:14;15922;15918:35;15911:5;15907:47;15904:67;;;15967:1;15964;15957:12;15982:648;16115:6;16110:3;16103:19;16085:3;16141:4;16170;16165:3;16161:14;16154:21;;16198:5;16221:1;16231:374;16245:6;16242:1;16239:13;16231:374;;;16319:6;16306:20;16301:3;16294:33;16380:2;16372:6;16368:15;16355:29;16397:33;16422:7;16397:33;:::i;:::-;-1:-1:-1;;;;;16464:33:160;16450:12;;;16443:55;16521:4;16545:12;;;;16580:15;;;;;16494:1;16260:9;16231:374;;16635:500;16693:5;16700:6;16760:3;16747:17;16846:2;16842:7;16831:8;16815:14;16811:29;16807:43;16787:18;16783:68;16773:96;;16865:1;16862;16855:12;16773:96;16893:33;;16997:4;16984:18;;;-1:-1:-1;16945:21:160;;-1:-1:-1;;;;;;17014:30:160;;17011:50;;;17057:1;17054;17047:12;17011:50;17104:6;17088:14;17084:27;17077:5;17073:39;17070:59;;;17125:1;17122;17115:12;17140:266;17228:6;17223:3;17216:19;17280:6;17273:5;17266:4;17261:3;17257:14;17244:43;-1:-1:-1;17332:1:160;17307:16;;;17325:4;17303:27;;;17296:38;;;;17388:2;17367:15;;;-1:-1:-1;;17363:29:160;17354:39;;;17350:50;;17140:266::o;17411:1366::-;17480:3;17508:6;17548:5;17535:19;17530:3;17523:32;17603:4;17596:5;17592:16;17579:30;17618:33;17643:7;17618:33;:::i;:::-;-1:-1:-1;;;;;17683:33:160;17676:4;17667:14;;17660:57;17773:4;17762:16;;;17749:30;17733:14;;;17726:54;17809:36;17839:4;17828:16;;17809:36;:::i;:::-;-1:-1:-1;;;;;1156:31:160;17896:4;17887:14;;1144:44;17958:4;17947:16;;;17934:30;17918:14;;;17911:54;18010:67;18071:4;18060:16;;17951:5;18010:67;:::i;:::-;18109:2;18102:4;18097:3;18093:14;18086:26;18133:81;18210:2;18205:3;18201:12;18187;18171:14;18133:81;:::i;:::-;18121:93;;;;18261:100;18355:4;18348:5;18344:16;18337:5;18261:100;:::i;:::-;18403:3;18397:4;18393:14;18386:4;18381:3;18377:14;18370:38;18431:108;18534:4;18518:14;18502;18431:108;:::i;:::-;18417:122;;;;18586:55;18635:4;18628:5;18624:16;18617:5;18586:55;:::i;:::-;18685:3;18677:6;18673:16;18666:4;18661:3;18657:14;18650:40;18706:65;18764:6;18748:14;18732;18706:65;:::i;18782:301::-;18985:2;18974:9;18967:21;18948:4;19005:72;19073:2;19062:9;19058:18;19050:6;19005:72;:::i;19088:405::-;19290:2;19272:21;;;19329:2;19309:18;;;19302:30;19368:34;19363:2;19348:18;;19341:62;-1:-1:-1;;;19434:2:160;19419:18;;19412:39;19483:3;19468:19;;19088:405::o;19498:473::-;19801:2;19790:9;19783:21;19764:4;19821:72;19889:2;19878:9;19874:18;19866:6;19821:72;:::i;:::-;19813:80;;19902:63;19961:2;19950:9;19946:18;19938:6;1286:12;;-1:-1:-1;;;;;1282:38:160;1270:51;;1370:4;1359:16;;;1353:23;1337:14;;1330:47;1199:184;19976:250;20061:1;20071:113;20085:6;20082:1;20079:13;20071:113;;;20161:11;;;20155:18;20142:11;;;20135:39;20107:2;20100:10;20071:113;;;-1:-1:-1;;20218:1:160;20200:16;;20193:27;19976:250::o;20231:270::-;20272:3;20310:5;20304:12;20337:6;20332:3;20325:19;20353:76;20422:6;20415:4;20410:3;20406:14;20399:4;20392:5;20388:16;20353:76;:::i;:::-;20483:2;20462:15;-1:-1:-1;;20458:29:160;20449:39;;;;20490:4;20445:50;;20231:270;-1:-1:-1;;20231:270:160:o;20506:217::-;20653:2;20642:9;20635:21;20616:4;20673:44;20713:2;20702:9;20698:18;20690:6;20673:44;:::i;20728:401::-;20930:2;20912:21;;;20969:2;20949:18;;;20942:30;21008:34;21003:2;20988:18;;20981:62;-1:-1:-1;;;21074:2:160;21059:18;;21052:35;21119:3;21104:19;;20728:401::o;21550:416::-;21752:2;21734:21;;;21791:2;21771:18;;;21764:30;21830:34;21825:2;21810:18;;21803:62;-1:-1:-1;;;21896:2:160;21881:18;;21874:50;21956:3;21941:19;;21550:416::o;22395:127::-;22456:10;22451:3;22447:20;22444:1;22437:31;22487:4;22484:1;22477:15;22511:4;22508:1;22501:15;22527:125;22592:9;;;22613:10;;;22610:36;;;22626:18;;:::i;23426:127::-;23487:10;23482:3;23478:20;23475:1;23468:31;23518:4;23515:1;23508:15;23542:4;23539:1;23532:15;24392:248;24487:6;24540:2;24528:9;24519:7;24515:23;24511:32;24508:52;;;24556:1;24553;24546:12;24508:52;24579:55;24626:7;24615:9;24579:55;:::i;24842:138::-;24921:13;;24943:31;24921:13;24943:31;:::i;24985:441::-;25038:5;25091:3;25084:4;25076:6;25072:17;25068:27;25058:55;;25109:1;25106;25099:12;25058:55;25138:6;25132:13;25169:48;25185:31;25213:2;25185:31;:::i;25169:48::-;25242:2;25233:7;25226:19;25288:3;25281:4;25276:2;25268:6;25264:15;25260:26;25257:35;25254:55;;;25305:1;25302;25295:12;25254:55;25318:77;25392:2;25385:4;25376:7;25372:18;25365:4;25357:6;25353:17;25318:77;:::i;25431:164::-;25507:13;;25556;;25549:21;25539:32;;25529:60;;25585:1;25582;25575:12;25600:1018;25707:6;25715;25768:2;25756:9;25747:7;25743:23;25739:32;25736:52;;;25784:1;25781;25774:12;25736:52;25817:9;25811:16;-1:-1:-1;;;;;25887:2:160;25879:6;25876:14;25873:34;;;25903:1;25900;25893:12;25873:34;25926:22;;;;25982:4;25964:16;;;25960:27;25957:47;;;26000:1;25997;25990:12;25957:47;26033:2;26027:9;26075:4;26067:6;26063:17;26130:6;26118:10;26115:22;26110:2;26098:10;26095:18;26092:46;26089:72;;;26141:18;;:::i;:::-;26177:2;26170:22;26216:9;;26201:25;;26262:2;26254:11;;26248:18;26275:31;26248:18;26275:31;:::i;:::-;26334:2;26322:15;;26315:30;26384:2;26376:11;;26370:18;26400:16;;;26397:36;;;26429:1;26426;26419:12;26397:36;26466:55;26513:7;26502:8;26498:2;26494:17;26466:55;:::i;:::-;26461:2;26449:15;;26442:80;-1:-1:-1;26453:6:160;-1:-1:-1;26566:46:160;;-1:-1:-1;;26608:2:160;26593:18;;26566:46;:::i;:::-;26556:56;;25600:1018;;;;;:::o;27452:740::-;27517:5;27570:3;27563:4;27555:6;27551:17;27547:27;27537:55;;27588:1;27585;27578:12;27537:55;27617:6;27611:13;27643:4;27667:60;27683:43;27723:2;27683:43;:::i;27667:60::-;27749:3;27773:2;27768:3;27761:15;27801:4;27796:3;27792:14;27785:21;;27858:4;27852:2;27849:1;27845:10;27837:6;27833:23;27829:34;27815:48;;27886:3;27878:6;27875:15;27872:35;;;27903:1;27900;27893:12;27872:35;27939:4;27931:6;27927:17;27953:210;27969:6;27964:3;27961:15;27953:210;;;28042:3;28036:10;28059:31;28084:5;28059:31;:::i;:::-;28103:18;;28141:12;;;;27986;;27953:210;;28197:960;28286:5;28339:3;28332:4;28324:6;28320:17;28316:27;28306:55;;28357:1;28354;28347:12;28306:55;28386:6;28380:13;28412:4;28436:60;28452:43;28492:2;28452:43;:::i;28436:60::-;28530:15;;;28616:1;28612:10;;;;28600:23;;28596:32;;;28561:12;;;;28640:15;;;28637:35;;;28668:1;28665;28658:12;28637:35;28704:2;28696:6;28692:15;28716:412;28732:6;28727:3;28724:15;28716:412;;;28810:4;28804:3;28799;28795:13;28791:24;28788:44;;;28828:1;28825;28818:12;28788:44;28858:22;;:::i;:::-;28913:3;28907:10;28900:5;28893:25;28961:2;28956:3;28952:12;28946:19;28978:33;29003:7;28978:33;:::i;:::-;29031:14;;;29024:31;29068:18;;29106:12;;;;28758:4;28749:14;28716:412;;29162:1340;29268:6;29321:2;29309:9;29300:7;29296:23;29292:32;29289:52;;;29337:1;29334;29327:12;29289:52;29370:9;29364:16;-1:-1:-1;;;;;29440:2:160;29432:6;29429:14;29426:34;;;29456:1;29453;29446:12;29426:34;29479:22;;;;29535:6;29517:16;;;29513:29;29510:49;;;29555:1;29552;29545:12;29510:49;29581:22;;:::i;:::-;29632:2;29626:9;29619:5;29612:24;29668:42;29706:2;29702;29698:11;29668:42;:::i;:::-;29663:2;29656:5;29652:14;29645:66;29757:2;29753;29749:11;29743:18;29738:2;29731:5;29727:14;29720:42;29794;29832:2;29828;29824:11;29794:42;:::i;:::-;29789:2;29782:5;29778:14;29771:66;29884:3;29880:2;29876:12;29870:19;29864:3;29857:5;29853:15;29846:44;29929:3;29925:2;29921:12;29915:19;29959:2;29949:8;29946:16;29943:36;;;29975:1;29972;29965:12;29943:36;30012:67;30071:7;30060:8;30056:2;30052:17;30012:67;:::i;:::-;30006:3;29999:5;29995:15;29988:92;;30119:3;30115:2;30111:12;30105:19;30149:2;30139:8;30136:16;30133:36;;;30165:1;30162;30155:12;30133:36;30202:91;30285:7;30274:8;30270:2;30266:17;30202:91;:::i;:::-;30196:3;30189:5;30185:15;30178:116;;30333:3;30329:2;30325:12;30319:19;30363:2;30353:8;30350:16;30347:36;;;30379:1;30376;30369:12;30347:36;30416:55;30463:7;30452:8;30448:2;30444:17;30416:55;:::i;:::-;30410:3;30399:15;;30392:80;-1:-1:-1;30403:5:160;29162:1340;-1:-1:-1;;;;;29162:1340:160:o;31749:465::-;31802:3;31840:5;31834:12;31867:6;31862:3;31855:19;31893:4;31922;31917:3;31913:14;31906:21;;31961:4;31954:5;31950:16;31984:1;31994:195;32008:6;32005:1;32002:13;31994:195;;;32073:13;;-1:-1:-1;;;;;32069:39:160;32057:52;;32129:12;;;;32164:15;;;;32105:1;32023:9;31994:195;;32219:501;32296:3;32334:5;32328:12;32361:6;32356:3;32349:19;32387:4;32416;32411:3;32407:14;32400:21;;32455:4;32448:5;32444:16;32478:1;32488:207;32502:6;32499:1;32496:13;32488:207;;;32551:62;32609:3;32600:6;32594:13;3254:12;;3242:25;;3320:4;3309:16;;;3303:23;-1:-1:-1;;;;;3299:49:160;3283:14;;3276:73;3164:191;32551:62;32642:4;32633:14;;;;;32670:15;;;;32524:1;32517:9;32488:207;;32725:962;32785:3;32813:6;32846:5;32840:12;32835:3;32828:25;32931:1;32927;32922:3;32918:11;32914:19;32906:4;32899:5;32895:16;32889:23;32885:49;32878:4;32873:3;32869:14;32862:73;32984:4;32977:5;32973:16;32967:23;32960:4;32955:3;32951:14;32944:47;33037:4;33030:5;33026:16;33020:23;33052:48;33094:4;33089:3;33085:14;33071:12;-1:-1:-1;;;;;1156:31:160;1144:44;;1090:104;33052:48;;33149:4;33142:5;33138:16;33132:23;33125:4;33120:3;33116:14;33109:47;33204:4;33197:5;33193:16;33187:23;33242:2;33235:4;33230:3;33226:14;33219:26;33266:58;33320:2;33315:3;33311:12;33295:14;33266:58;:::i;:::-;33254:70;;;33372:4;33365:5;33361:16;33355:23;33420:3;33414:4;33410:14;33403:4;33398:3;33394:14;33387:38;33448:74;33517:4;33501:14;33448:74;:::i;:::-;33434:88;;;33570:4;33563:5;33559:16;33553:23;33620:3;33612:6;33608:16;33601:4;33596:3;33592:14;33585:40;33641;33674:6;33658:14;33641:40;:::i;:::-;33634:47;32725:962;-1:-1:-1;;;;;32725:962:160:o;33692:387::-;-1:-1:-1;;;;;33921:32:160;;33903:51;;33990:2;33985;33970:18;;33963:30;;;-1:-1:-1;;34010:63:160;;34054:18;;34046:6;34010:63;:::i;34505:521::-;34582:4;34588:6;34648:11;34635:25;34742:2;34738:7;34727:8;34711:14;34707:29;34703:43;34683:18;34679:68;34669:96;;34761:1;34758;34751:12;34669:96;34788:33;;34840:20;;;-1:-1:-1;;;;;;34872:30:160;;34869:50;;;34915:1;34912;34905:12;34869:50;34948:4;34936:17;;-1:-1:-1;34979:14:160;34975:27;;;34965:38;;34962:58;;;35016:1;35013;35006:12;35031:412;35226:25;;;-1:-1:-1;;;;;35287:32:160;;35282:2;35267:18;;35260:60;35356:2;35351;35336:18;;35329:30;;;-1:-1:-1;;35376:61:160;;35418:18;;35410:6;35402;35376:61;:::i;35860:128::-;35927:9;;;35948:11;;;35945:37;;;35962:18;;:::i;35993:135::-;36032:3;36053:17;;;36050:43;;36073:18;;:::i;:::-;-1:-1:-1;36120:1:160;36109:13;;35993:135::o;36133:290::-;36334:2;36323:9;36316:21;36297:4;36354:63;36413:2;36402:9;36398:18;36390:6;36354:63;:::i;36428:462::-;36729:2;36718:9;36711:21;36692:4;36749:63;36808:2;36797:9;36793:18;36785:6;36749:63;:::i;37705:278::-;1286:12;;-1:-1:-1;;;;;1282:38:160;1270:51;;1370:4;1359:16;;;1353:23;1337:14;;;1330:47;37911:2;37896:18;;37923:54;1199:184;38394:385;38579:25;;;-1:-1:-1;;;;;38640:32:160;;38635:2;38620:18;;38613:60;38709:2;38704;38689:18;;38682:30;;;-1:-1:-1;;38729:44:160;;38754:18;;38746:6;38729:44;:::i;38784:202::-;38851:6;38904:2;38892:9;38883:7;38879:23;38875:32;38872:52;;;38920:1;38917;38910:12;38872:52;38943:37;38970:9;38943:37;:::i;40327:287::-;40456:3;40494:6;40488:13;40510:66;40569:6;40564:3;40557:4;40549:6;40545:17;40510:66;:::i;:::-;40592:16;;;;;40327:287;-1:-1:-1;;40327:287:160:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "WARP_MESSENGER()": "b771b3bc",
    "addFeeAmount(bytes32,address,uint256)": "8ac0fd04",
    "blockchainID()": "d127dc9b",
    "calculateMessageID(bytes32,bytes32,uint256)": "a8898181",
    "checkRelayerRewardAmount(address,address)": "c473eef8",
    "getFeeInfo(bytes32)": "e69d606a",
    "getMessageHash(bytes32)": "399b77da",
    "getNextMessageID(bytes32)": "df20e8bc",
    "getReceiptAtIndex(bytes32,uint256)": "892bf412",
    "getReceiptQueueSize(bytes32)": "2bc8b0bf",
    "getRelayerRewardAddress(bytes32)": "2e27c223",
    "initializeBlockchainID()": "0af5b4ff",
    "messageNonce()": "ecc70428",
    "messageReceived(bytes32)": "ebc3b1ba",
    "receiptQueues(bytes32)": "e6e67bd5",
    "receiveCrossChainMessage(uint32,address)": "ccb5f809",
    "receivedFailedMessageHashes(bytes32)": "860a3b06",
    "redeemRelayerRewards(address)": "22296c3a",
    "retryMessageExecution(bytes32,(uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))": "fc2d6197",
    "retrySendCrossChainMessage((uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))": "8245a1b0",
    "sendCrossChainMessage((bytes32,address,(address,uint256),uint256,address[],bytes))": "62448850",
    "sendSpecifiedReceipts(bytes32,bytes32[],(address,uint256),address[])": "a9a85614",
    "sentMessageInfo(bytes32)": "2ca40f55"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct TeleporterFeeInfo\",\"name\":\"updatedFeeInfo\",\"type\":\"tuple\"}],\"name\":\"AddFeeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blockchainID\",\"type\":\"bytes32\"}],\"name\":\"BlockchainIDInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"MessageExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originSenderAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"allowedRelayerAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"receivedMessageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayerRewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct TeleporterMessageReceipt[]\",\"name\":\"receipts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct TeleporterMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"MessageExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayerRewardAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct TeleporterFeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"}],\"name\":\"ReceiptReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deliverer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardRedeemer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originSenderAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"allowedRelayerAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"receivedMessageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayerRewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct TeleporterMessageReceipt[]\",\"name\":\"receipts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct TeleporterMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ReceiveCrossChainMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RelayerRewardsRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originSenderAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"allowedRelayerAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"receivedMessageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayerRewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct TeleporterMessageReceipt[]\",\"name\":\"receipts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct TeleporterMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct TeleporterFeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"}],\"name\":\"SendCrossChainMessage\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WARP_MESSENGER\",\"outputs\":[{\"internalType\":\"contract IWarpMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"feeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"additionalFeeAmount\",\"type\":\"uint256\"}],\"name\":\"addFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockchainID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"calculateMessageID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeAsset\",\"type\":\"address\"}],\"name\":\"checkRelayerRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"}],\"name\":\"getFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"getNextMessageID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getReceiptAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"receivedMessageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayerRewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct TeleporterMessageReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"getReceiptQueueSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"}],\"name\":\"getRelayerRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeBlockchainID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"}],\"name\":\"messageReceived\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"receiptQueues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"first\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"relayerRewardAddress\",\"type\":\"address\"}],\"name\":\"receiveCrossChainMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"}],\"name\":\"receivedFailedMessageHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAsset\",\"type\":\"address\"}],\"name\":\"redeemRelayerRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originSenderAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"allowedRelayerAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"receivedMessageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayerRewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct TeleporterMessageReceipt[]\",\"name\":\"receipts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct TeleporterMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"retryMessageExecution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originSenderAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requiredGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"allowedRelayerAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"receivedMessageNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayerRewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct TeleporterMessageReceipt[]\",\"name\":\"receipts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct TeleporterMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"retrySendCrossChainMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"destinationBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TeleporterFeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requiredGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"allowedRelayerAddresses\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct TeleporterMessageInput\",\"name\":\"messageInput\",\"type\":\"tuple\"}],\"name\":\"sendCrossChainMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"messageIDs\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TeleporterFeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"allowedRelayerAddresses\",\"type\":\"address[]\"}],\"name\":\"sendSpecifiedReceipts\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageID\",\"type\":\"bytes32\"}],\"name\":\"sentMessageInfo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TeleporterFeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"https://github.com/ava-labs/icm-contracts/blob/main/SECURITY.md\",\"details\":\"Implementation of the {ITeleporterMessenger} interface. This implementation is used to send messages cross chain using the IWarpMessenger precompile, and to receive messages sent from other chains. Teleporter contracts should be deployed through Nick's method of universal deployer, such that the same contract is deployed at the same address on all chains.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addFeeAmount(bytes32,address,uint256)\":{\"details\":\"Both `senderNonReentrant` and `receiverNonReentrant` are used here to prevent the external call of `safeTransferFrom` from being reentrant, calling `receiveCrossChainMessage` to attribute rewards for this message, and then still adding fee amount for this message. Emits an {AddFeeAmount} event. Requirements: - `additionalFeeAmount` must be non-zero. - `message` must exist and not have been acknowledged with a receipt yet. - `feeTokenAddress` must match the fee asset contract address used in the original call to `sendCrossChainMessage`.\"},\"checkRelayerRewardAmount(address,address)\":{\"returns\":{\"_0\":\"The amount of the fee asset redeemable by the specified relayer.\"}},\"getFeeInfo(bytes32)\":{\"returns\":{\"_0\":\"The fee token address and fee amount for a the given sent message ID. If the message ID is not found, zero address and amount values are returned.\"}},\"getMessageHash(bytes32)\":{\"returns\":{\"_0\":\"The message hash\"}},\"getNextMessageID(bytes32)\":{\"returns\":{\"_0\":\"The next message ID to be used for a message sent from the contract instance.\"}},\"getReceiptAtIndex(bytes32,uint256)\":{\"returns\":{\"_0\":\"The receipt requested.\"}},\"getReceiptQueueSize(bytes32)\":{\"returns\":{\"_0\":\"Size of the given queue.\"}},\"getRelayerRewardAddress(bytes32)\":{\"returns\":{\"_0\":\"The relayer reward address for the given message.\"}},\"initializeBlockchainID()\":{\"details\":\"Emits {BlockchainIDInitialized} event.\",\"returns\":{\"_0\":\"The current blockchain ID.\"}},\"messageReceived(bytes32)\":{\"returns\":{\"_0\":\"Boolean representing if the given message has been received.\"}},\"receiveCrossChainMessage(uint32,address)\":{\"details\":\"Emits a {ReceiveCrossChainMessage} event. Re-entrancy is explicitly disallowed between receiving functions. One message is not able to receive another message. Requirements: - `relayerRewardAddress` must not be the zero address. - `messageIndex` must specify a valid warp message in the transaction's storage slots. - Valid warp message provided in storage slots, and sender address matches the address of this contract. - Teleporter message `destinationBlockchainID` must match the `blockchainID` of this contract. - Teleporter message was not previously received. - Transaction was sent by an allowed relayer for corresponding teleporter message.\"},\"redeemRelayerRewards(address)\":{\"details\":\"Requirements: - `rewardAmount` must be non-zero.\"},\"retryMessageExecution(bytes32,(uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))\":{\"details\":\"A Teleporter message has an associated `requiredGasLimit` that is used to execute the message. If the `requiredGasLimit` is too low, then the message execution will fail. This method allows for retrying the execution of a message with a higher gas limit. Contrary to `receiveCrossChainMessage`, which will only use `requiredGasLimit` in the sub-call to execute the message, this method may use all of the gas available in the transaction. Reverts if the message execution fails again on the specified message. Emits a {MessageExecuted} event if the retry is successful. Requirements: - `message` must have previously failed to execute, and matches the hash of the failed message.\"},\"retrySendCrossChainMessage((uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))\":{\"details\":\"Emits a {SendCrossChainMessage} event. Requirements: - `message` must have been previously sent. - `message` encoding must match previously sent message.\"},\"sendCrossChainMessage((bytes32,address,(address,uint256),uint256,address[],bytes))\":{\"details\":\"See {ITeleporterMessenger-sendCrossChainMessage} When executed, a relayer may kick off an asynchronous event to have the validators of the chain create an aggregate BLS signature of the message. Emits a {SendCrossChainMessage} event when message successfully gets sent.\"},\"sendSpecifiedReceipts(bytes32,bytes32[],(address,uint256),address[])\":{\"details\":\"There is no explicit limit to the number of receipts able to be sent by a {sendSpecifiedReceipts} message because this method is intended to be used by relayers themselves to ensure their receipts get returned. There is no fee associated with the empty message, and the same relayer is expected to relay it themselves in order to claim their rewards, so it is their responsibility to ensure that the necessary gas is provided for however many receipts are being retried. These specified receipts are not removed from their corresponding receipt queue because there is no efficient way to remove a specific receipt from an arbitrary position in the queue, and it is harmless for receipts to be sent multiple times within the protocol. Emits {SendCrossChainMessage} event. Requirements: - `messageIDs` must all be valid and have existing receipts.\",\"returns\":{\"_0\":\"The message ID of the newly sent message.\"}}},\"stateVariables\":{\"_receivedMessageNonces\":{\"details\":\"Tracks the message nonce for each message that has been received. The key is the message ID, and the value is the nonce value that was received as a part of that message. Note: the `messageNonce` values are also used to determine if a given message has been received or not.\"},\"_relayerRewardAddresses\":{\"details\":\"Tracks the relayer reward address for each message that has been received. The key is the message ID, and the value is the reward address provided by the deliverer of the message.\"},\"_relayerRewardAmounts\":{\"details\":\"Tracks the reward amounts for a given asset able to be redeemed by a given relayer. The first key is the relayer reward address, the second key is the fee token contract address, and the value is the amount of the asset redeemable by the relayer.\"},\"blockchainID\":{\"details\":\"Can be initialized by calling initializeBlockchainID, or will be initialized automatically on the first successful call to send or receive a message.\"},\"messageNonce\":{\"details\":\"Used to provide uniqueness when generating message IDs for new messages. The first message sent will use a messageNonce of 1 such that the nonce value can be used to provide replay protection for a given message ID.\"},\"receiptQueues\":{\"details\":\"The key is the blockchain ID of the other chain, and the value is a queue of pending receipts for messages received from that chain.\"},\"receivedFailedMessageHashes\":{\"details\":\"Enables retrying of failed messages with higher gas limits. Message execution is guaranteed to succeed at most once. The key is the message ID, and the value is the hash of the uniquely identified message whose execution failed.\"},\"sentMessageInfo\":{\"details\":\"The key is the message ID, and the value is the info for the uniquely identified message.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddFeeAmount(bytes32,(address,uint256))\":{\"notice\":\"Emitted when an additional fee amount is added to a Teleporter message that had previously been sent, but not yet delivered to the destination chain.\"},\"BlockchainIDInitialized(bytes32)\":{\"notice\":\"Emitted when the blockchain ID of the contract instance is initialized using the Warp precompile.\"},\"MessageExecuted(bytes32,bytes32)\":{\"notice\":\"Emitted when a Teleporter message is successfully executed with the specified destination address and message call data. This can occur either when the message is initially received, or on a retry attempt. Each message received can be executed successfully at most once.\"},\"MessageExecutionFailed(bytes32,bytes32,(uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))\":{\"notice\":\"Emitted when a Teleporter message is being delivered on the destination chain to an address, but message execution fails. Failed messages can then be retried with `retryMessageExecution`\"},\"ReceiptReceived(bytes32,bytes32,address,(address,uint256))\":{\"notice\":\"Emitted when a receipt is marked as received on the source chain that sent the corresponding Teleporter message.\"},\"ReceiveCrossChainMessage(bytes32,bytes32,address,address,(uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))\":{\"notice\":\"Emitted when a TeleporterMessage is successfully received.\"},\"RelayerRewardsRedeemed(address,address,uint256)\":{\"notice\":\"Emitted when an account redeems accumulated relayer rewards.\"},\"SendCrossChainMessage(bytes32,bytes32,(uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes),(address,uint256))\":{\"notice\":\"Emitted when sending a Teleporter message cross-chain.\"}},\"kind\":\"user\",\"methods\":{\"WARP_MESSENGER()\":{\"notice\":\"Warp precompile used for sending and receiving Warp messages.\"},\"addFeeAmount(bytes32,address,uint256)\":{\"notice\":\"Adds the additional fee amount to the amount to be paid to the relayer that delivers the given message ID to the destination chain.\"},\"blockchainID()\":{\"notice\":\"The blockchain ID of the chain the contract is deployed on.\"},\"calculateMessageID(bytes32,bytes32,uint256)\":{\"notice\":\"Calculates the message ID for a message sent from this contract instance with the given source blockchain ID, destination blockchain ID, and message nonce.\"},\"checkRelayerRewardAmount(address,address)\":{\"notice\":\"Gets the current reward amount of a given fee asset that is redeemable by the given relayer.\"},\"getFeeInfo(bytes32)\":{\"notice\":\"Gets the fee token address and amount for a given sent message.\"},\"getMessageHash(bytes32)\":{\"notice\":\"Gets the hash of a given message stored in the EVM state, if the message exists.\"},\"getNextMessageID(bytes32)\":{\"notice\":\"Gets the next message ID to be used for a message sent from the contract instance.\"},\"getReceiptAtIndex(bytes32,uint256)\":{\"notice\":\"Gets the receipt at the given index in the queue for the given source chain ID.\"},\"getReceiptQueueSize(bytes32)\":{\"notice\":\"Gets the number of receipts that are waiting to be sent to the given source chain ID.\"},\"getRelayerRewardAddress(bytes32)\":{\"notice\":\"Returns the address the relayer reward should be sent to on the source chain for a given message, assuming that the message has already been delivered.\"},\"initializeBlockchainID()\":{\"notice\":\"If not already set, initializes blockchainID by getting the current blockchain ID value from the Warp precompile.\"},\"messageNonce()\":{\"notice\":\"A monotonically incremented integer tracking the total number of messages sent by this TeleporterMessenger contract.\"},\"messageReceived(bytes32)\":{\"notice\":\"Checks whether or not the given message has been received by this chain.\"},\"receiptQueues(bytes32)\":{\"notice\":\"Tracks the outstanding receipts to send back to a given chain in subsequent messages sent to that chain.\"},\"receiveCrossChainMessage(uint32,address)\":{\"notice\":\"Receives a cross-chain message, and marks the `relayerRewardAddress` for fee reward for a successful delivery.\"},\"receivedFailedMessageHashes(bytes32)\":{\"notice\":\"Tracks the hash of messages that have been received but have never succeeded in execution.\"},\"redeemRelayerRewards(address)\":{\"notice\":\"Sends any fee amount rewards for the given fee asset out to the caller.\"},\"retryMessageExecution(bytes32,(uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))\":{\"notice\":\"Retries the execution of a previously delivered message by verifying the payload matches the hash of the payload originally delivered, and calling the destination address again.\"},\"retrySendCrossChainMessage((uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))\":{\"notice\":\"Called by transactions to retry the sending of a cross-chain message.\"},\"sendSpecifiedReceipts(bytes32,bytes32[],(address,uint256),address[])\":{\"notice\":\"Sends the receipts for the given `messageIDs`.\"},\"sentMessageInfo(bytes32)\":{\"notice\":\"Tracks the message hash and fee information for each message sent that has yet to be acknowledged with a receipt.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/teleporter/TeleporterMessenger.sol\":\"TeleporterMessenger\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@avalabs/subnet-evm-contracts@1.2.2/=lib/subnet-evm/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@mocks/=contracts/mocks/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable@5.0.2/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts@5.0.2/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@teleporter/=contracts/teleporter/\",\":@utilities/=contracts/utilities/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":subnet-evm/=lib/subnet-evm/\"]},\"sources\":{\"contracts/teleporter/ITeleporterMessenger.sol\":{\"keccak256\":\"0x132bfcef25900fa05c6e7319de788502d3616646577ea2d58fb303e00f1bc715\",\"license\":\"LicenseRef-Ecosystem\",\"urls\":[\"bzz-raw://35a18c6f77f4efbbbb5c389e149d4eb6aa631fdaf7e8412e925dbb97efc532c7\",\"dweb:/ipfs/QmYi9mAqGSeC8SH2GJCtVqnhhhziFK5RQ21NirvGrBoton\"]},\"contracts/teleporter/ITeleporterReceiver.sol\":{\"keccak256\":\"0x3a3cd5b52193d940d634d4754f51f423e75c927a86d3eb91d5a583eb54ef9cd6\",\"license\":\"LicenseRef-Ecosystem\",\"urls\":[\"bzz-raw://96843ce304eaedceea3b2b5aca57be97fc200e58533045c544ad7bba62223e86\",\"dweb:/ipfs/QmYMvWLqpRqENKrKwhLTcWrQbqtdo35zLJpgMxzKE2ZznV\"]},\"contracts/teleporter/ReceiptQueue.sol\":{\"keccak256\":\"0x79bbf8faa818cc8834034e7ae37e38f53fdff71540277e73c06a68dfa9c2e45e\",\"license\":\"LicenseRef-Ecosystem\",\"urls\":[\"bzz-raw://076fbb8461c4758f6b5c3e8a91607292cdf95a1b7fb030448c288932746a1434\",\"dweb:/ipfs/QmcjxZZW4HnAbcWB1EHsT6Tw7V5ChJ4YQu8Lb7b7VzoRhp\"]},\"contracts/teleporter/TeleporterMessenger.sol\":{\"keccak256\":\"0xca6703642a7cc8aa7bae98c1bc724b804b2f8fd44e24f833bceae7c95d7ac29f\",\"license\":\"LicenseRef-Ecosystem\",\"urls\":[\"bzz-raw://d529e226ed75f472c3ab20004447e05bfa9de45840b758943c546d58f512206b\",\"dweb:/ipfs/QmcAXhcxSYpVgUGHqag6n9mBJt8Sq7yy3gh8b6TEcfh5tW\"]},\"contracts/utilities/ReentrancyGuards.sol\":{\"keccak256\":\"0x934c47e5ea5a9523bdafd60285efb94aae4fc77b4c285c47b7cf44c1b0edfe79\",\"license\":\"LicenseRef-Ecosystem\",\"urls\":[\"bzz-raw://9098ee1bcc7d01844fd474f032189fdfc1701233a96f616f7ac3fa8fd316fb63\",\"dweb:/ipfs/QmcDTZUZZsB6qFPGmjcBNHv8c4Xa3bu7YcSZiYNZmvDKEN\"]},\"contracts/utilities/SafeERC20TransferFrom.sol\":{\"keccak256\":\"0x485867dc46af4ee0812024758b2f3493b3efc15f8ba23d73223dd847b04c8018\",\"license\":\"LicenseRef-Ecosystem\",\"urls\":[\"bzz-raw://2b9b29d8ee033a2ed8dd1bdb024027704f1180a1316732cb3d3874898d277736\",\"dweb:/ipfs/QmR257FurAqL57rzY1BVJhxCS6yndrBow1J4hMHCwfcvyA\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/subnet-evm/contracts/contracts/interfaces/IWarpMessenger.sol\":{\"keccak256\":\"0x9f75d13b8995e3b13a39b88b9f7d8046a3127c1b81abcd202c2438ddece42819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af89d9499252371faa23dfc13b4067876f7d7b6b01a1a3d891cbf7c9b1f90c\",\"dweb:/ipfs/QmXntNu3vLECvSAJdacsebtecoaUpeYvUDATpxS5GbB8bL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.25+commit.b61c2a91"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct TeleporterFeeInfo",
              "name": "updatedFeeInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "feeTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddFeeAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "blockchainID",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BlockchainIDInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MessageExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct TeleporterMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "messageNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "originSenderAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationBlockchainID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "destinationAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "requiredGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedRelayerAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "struct TeleporterMessageReceipt[]",
                  "name": "receipts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "receivedMessageNonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayerRewardAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageExecutionFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "destinationBlockchainID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "relayerRewardAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct TeleporterFeeInfo",
              "name": "feeInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "feeTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceiptReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "deliverer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardRedeemer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct TeleporterMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "messageNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "originSenderAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationBlockchainID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "destinationAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "requiredGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedRelayerAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "struct TeleporterMessageReceipt[]",
                  "name": "receipts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "receivedMessageNonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayerRewardAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceiveCrossChainMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "redeemer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RelayerRewardsRedeemed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "destinationBlockchainID",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct TeleporterMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "messageNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "originSenderAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationBlockchainID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "destinationAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "requiredGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedRelayerAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "struct TeleporterMessageReceipt[]",
                  "name": "receipts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "receivedMessageNonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayerRewardAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct TeleporterFeeInfo",
              "name": "feeInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "feeTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SendCrossChainMessage",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WARP_MESSENGER",
          "outputs": [
            {
              "internalType": "contract IWarpMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "feeTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "additionalFeeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFeeAmount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blockchainID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "destinationBlockchainID",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateMessageID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeAsset",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkRelayerRewardAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "destinationBlockchainID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNextMessageID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceiptAtIndex",
          "outputs": [
            {
              "internalType": "struct TeleporterMessageReceipt",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "receivedMessageNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayerRewardAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceiptQueueSize",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRelayerRewardAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeBlockchainID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messageNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "messageReceived",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "receiptQueues",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "first",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "last",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "messageIndex",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "relayerRewardAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveCrossChainMessage"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "receivedFailedMessageHashes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeAsset",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemRelayerRewards"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32"
            },
            {
              "internalType": "struct TeleporterMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "messageNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "originSenderAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationBlockchainID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "destinationAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "requiredGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedRelayerAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "struct TeleporterMessageReceipt[]",
                  "name": "receipts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "receivedMessageNonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayerRewardAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retryMessageExecution"
        },
        {
          "inputs": [
            {
              "internalType": "struct TeleporterMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "messageNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "originSenderAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationBlockchainID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "destinationAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "requiredGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedRelayerAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "struct TeleporterMessageReceipt[]",
                  "name": "receipts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "receivedMessageNonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayerRewardAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retrySendCrossChainMessage"
        },
        {
          "inputs": [
            {
              "internalType": "struct TeleporterMessageInput",
              "name": "messageInput",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "destinationBlockchainID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "destinationAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct TeleporterFeeInfo",
                  "name": "feeInfo",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "feeTokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "requiredGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedRelayerAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendCrossChainMessage",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "sourceBlockchainID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "messageIDs",
              "type": "bytes32[]"
            },
            {
              "internalType": "struct TeleporterFeeInfo",
              "name": "feeInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "feeTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "allowedRelayerAddresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendSpecifiedReceipts",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sentMessageInfo",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            },
            {
              "internalType": "struct TeleporterFeeInfo",
              "name": "feeInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "feeTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addFeeAmount(bytes32,address,uint256)": {
            "details": "Both `senderNonReentrant` and `receiverNonReentrant` are used here to prevent the external call of `safeTransferFrom` from being reentrant, calling `receiveCrossChainMessage` to attribute rewards for this message, and then still adding fee amount for this message. Emits an {AddFeeAmount} event. Requirements: - `additionalFeeAmount` must be non-zero. - `message` must exist and not have been acknowledged with a receipt yet. - `feeTokenAddress` must match the fee asset contract address used in the original call to `sendCrossChainMessage`."
          },
          "checkRelayerRewardAmount(address,address)": {
            "returns": {
              "_0": "The amount of the fee asset redeemable by the specified relayer."
            }
          },
          "getFeeInfo(bytes32)": {
            "returns": {
              "_0": "The fee token address and fee amount for a the given sent message ID. If the message ID is not found, zero address and amount values are returned."
            }
          },
          "getMessageHash(bytes32)": {
            "returns": {
              "_0": "The message hash"
            }
          },
          "getNextMessageID(bytes32)": {
            "returns": {
              "_0": "The next message ID to be used for a message sent from the contract instance."
            }
          },
          "getReceiptAtIndex(bytes32,uint256)": {
            "returns": {
              "_0": "The receipt requested."
            }
          },
          "getReceiptQueueSize(bytes32)": {
            "returns": {
              "_0": "Size of the given queue."
            }
          },
          "getRelayerRewardAddress(bytes32)": {
            "returns": {
              "_0": "The relayer reward address for the given message."
            }
          },
          "initializeBlockchainID()": {
            "details": "Emits {BlockchainIDInitialized} event.",
            "returns": {
              "_0": "The current blockchain ID."
            }
          },
          "messageReceived(bytes32)": {
            "returns": {
              "_0": "Boolean representing if the given message has been received."
            }
          },
          "receiveCrossChainMessage(uint32,address)": {
            "details": "Emits a {ReceiveCrossChainMessage} event. Re-entrancy is explicitly disallowed between receiving functions. One message is not able to receive another message. Requirements: - `relayerRewardAddress` must not be the zero address. - `messageIndex` must specify a valid warp message in the transaction's storage slots. - Valid warp message provided in storage slots, and sender address matches the address of this contract. - Teleporter message `destinationBlockchainID` must match the `blockchainID` of this contract. - Teleporter message was not previously received. - Transaction was sent by an allowed relayer for corresponding teleporter message."
          },
          "redeemRelayerRewards(address)": {
            "details": "Requirements: - `rewardAmount` must be non-zero."
          },
          "retryMessageExecution(bytes32,(uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))": {
            "details": "A Teleporter message has an associated `requiredGasLimit` that is used to execute the message. If the `requiredGasLimit` is too low, then the message execution will fail. This method allows for retrying the execution of a message with a higher gas limit. Contrary to `receiveCrossChainMessage`, which will only use `requiredGasLimit` in the sub-call to execute the message, this method may use all of the gas available in the transaction. Reverts if the message execution fails again on the specified message. Emits a {MessageExecuted} event if the retry is successful. Requirements: - `message` must have previously failed to execute, and matches the hash of the failed message."
          },
          "retrySendCrossChainMessage((uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))": {
            "details": "Emits a {SendCrossChainMessage} event. Requirements: - `message` must have been previously sent. - `message` encoding must match previously sent message."
          },
          "sendCrossChainMessage((bytes32,address,(address,uint256),uint256,address[],bytes))": {
            "details": "See {ITeleporterMessenger-sendCrossChainMessage} When executed, a relayer may kick off an asynchronous event to have the validators of the chain create an aggregate BLS signature of the message. Emits a {SendCrossChainMessage} event when message successfully gets sent."
          },
          "sendSpecifiedReceipts(bytes32,bytes32[],(address,uint256),address[])": {
            "details": "There is no explicit limit to the number of receipts able to be sent by a {sendSpecifiedReceipts} message because this method is intended to be used by relayers themselves to ensure their receipts get returned. There is no fee associated with the empty message, and the same relayer is expected to relay it themselves in order to claim their rewards, so it is their responsibility to ensure that the necessary gas is provided for however many receipts are being retried. These specified receipts are not removed from their corresponding receipt queue because there is no efficient way to remove a specific receipt from an arbitrary position in the queue, and it is harmless for receipts to be sent multiple times within the protocol. Emits {SendCrossChainMessage} event. Requirements: - `messageIDs` must all be valid and have existing receipts.",
            "returns": {
              "_0": "The message ID of the newly sent message."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "WARP_MESSENGER()": {
            "notice": "Warp precompile used for sending and receiving Warp messages."
          },
          "addFeeAmount(bytes32,address,uint256)": {
            "notice": "Adds the additional fee amount to the amount to be paid to the relayer that delivers the given message ID to the destination chain."
          },
          "blockchainID()": {
            "notice": "The blockchain ID of the chain the contract is deployed on."
          },
          "calculateMessageID(bytes32,bytes32,uint256)": {
            "notice": "Calculates the message ID for a message sent from this contract instance with the given source blockchain ID, destination blockchain ID, and message nonce."
          },
          "checkRelayerRewardAmount(address,address)": {
            "notice": "Gets the current reward amount of a given fee asset that is redeemable by the given relayer."
          },
          "getFeeInfo(bytes32)": {
            "notice": "Gets the fee token address and amount for a given sent message."
          },
          "getMessageHash(bytes32)": {
            "notice": "Gets the hash of a given message stored in the EVM state, if the message exists."
          },
          "getNextMessageID(bytes32)": {
            "notice": "Gets the next message ID to be used for a message sent from the contract instance."
          },
          "getReceiptAtIndex(bytes32,uint256)": {
            "notice": "Gets the receipt at the given index in the queue for the given source chain ID."
          },
          "getReceiptQueueSize(bytes32)": {
            "notice": "Gets the number of receipts that are waiting to be sent to the given source chain ID."
          },
          "getRelayerRewardAddress(bytes32)": {
            "notice": "Returns the address the relayer reward should be sent to on the source chain for a given message, assuming that the message has already been delivered."
          },
          "initializeBlockchainID()": {
            "notice": "If not already set, initializes blockchainID by getting the current blockchain ID value from the Warp precompile."
          },
          "messageNonce()": {
            "notice": "A monotonically incremented integer tracking the total number of messages sent by this TeleporterMessenger contract."
          },
          "messageReceived(bytes32)": {
            "notice": "Checks whether or not the given message has been received by this chain."
          },
          "receiptQueues(bytes32)": {
            "notice": "Tracks the outstanding receipts to send back to a given chain in subsequent messages sent to that chain."
          },
          "receiveCrossChainMessage(uint32,address)": {
            "notice": "Receives a cross-chain message, and marks the `relayerRewardAddress` for fee reward for a successful delivery."
          },
          "receivedFailedMessageHashes(bytes32)": {
            "notice": "Tracks the hash of messages that have been received but have never succeeded in execution."
          },
          "redeemRelayerRewards(address)": {
            "notice": "Sends any fee amount rewards for the given fee asset out to the caller."
          },
          "retryMessageExecution(bytes32,(uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))": {
            "notice": "Retries the execution of a previously delivered message by verifying the payload matches the hash of the payload originally delivered, and calling the destination address again."
          },
          "retrySendCrossChainMessage((uint256,address,bytes32,address,uint256,address[],(uint256,address)[],bytes))": {
            "notice": "Called by transactions to retry the sending of a cross-chain message."
          },
          "sendSpecifiedReceipts(bytes32,bytes32[],(address,uint256),address[])": {
            "notice": "Sends the receipts for the given `messageIDs`."
          },
          "sentMessageInfo(bytes32)": {
            "notice": "Tracks the message hash and fee information for each message sent that has yet to be acknowledged with a receipt."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@avalabs/subnet-evm-contracts@1.2.2/=lib/subnet-evm/contracts/",
        "@forge-std/=lib/forge-std/src/",
        "@mocks/=contracts/mocks/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-upgradeable@5.0.2/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts@5.0.2/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@teleporter/=contracts/teleporter/",
        "@utilities/=contracts/utilities/",
        "ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/",
        "subnet-evm/=lib/subnet-evm/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/teleporter/TeleporterMessenger.sol": "TeleporterMessenger"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/teleporter/ITeleporterMessenger.sol": {
        "keccak256": "0x132bfcef25900fa05c6e7319de788502d3616646577ea2d58fb303e00f1bc715",
        "urls": [
          "bzz-raw://35a18c6f77f4efbbbb5c389e149d4eb6aa631fdaf7e8412e925dbb97efc532c7",
          "dweb:/ipfs/QmYi9mAqGSeC8SH2GJCtVqnhhhziFK5RQ21NirvGrBoton"
        ],
        "license": "LicenseRef-Ecosystem"
      },
      "contracts/teleporter/ITeleporterReceiver.sol": {
        "keccak256": "0x3a3cd5b52193d940d634d4754f51f423e75c927a86d3eb91d5a583eb54ef9cd6",
        "urls": [
          "bzz-raw://96843ce304eaedceea3b2b5aca57be97fc200e58533045c544ad7bba62223e86",
          "dweb:/ipfs/QmYMvWLqpRqENKrKwhLTcWrQbqtdo35zLJpgMxzKE2ZznV"
        ],
        "license": "LicenseRef-Ecosystem"
      },
      "contracts/teleporter/ReceiptQueue.sol": {
        "keccak256": "0x79bbf8faa818cc8834034e7ae37e38f53fdff71540277e73c06a68dfa9c2e45e",
        "urls": [
          "bzz-raw://076fbb8461c4758f6b5c3e8a91607292cdf95a1b7fb030448c288932746a1434",
          "dweb:/ipfs/QmcjxZZW4HnAbcWB1EHsT6Tw7V5ChJ4YQu8Lb7b7VzoRhp"
        ],
        "license": "LicenseRef-Ecosystem"
      },
      "contracts/teleporter/TeleporterMessenger.sol": {
        "keccak256": "0xca6703642a7cc8aa7bae98c1bc724b804b2f8fd44e24f833bceae7c95d7ac29f",
        "urls": [
          "bzz-raw://d529e226ed75f472c3ab20004447e05bfa9de45840b758943c546d58f512206b",
          "dweb:/ipfs/QmcAXhcxSYpVgUGHqag6n9mBJt8Sq7yy3gh8b6TEcfh5tW"
        ],
        "license": "LicenseRef-Ecosystem"
      },
      "contracts/utilities/ReentrancyGuards.sol": {
        "keccak256": "0x934c47e5ea5a9523bdafd60285efb94aae4fc77b4c285c47b7cf44c1b0edfe79",
        "urls": [
          "bzz-raw://9098ee1bcc7d01844fd474f032189fdfc1701233a96f616f7ac3fa8fd316fb63",
          "dweb:/ipfs/QmcDTZUZZsB6qFPGmjcBNHv8c4Xa3bu7YcSZiYNZmvDKEN"
        ],
        "license": "LicenseRef-Ecosystem"
      },
      "contracts/utilities/SafeERC20TransferFrom.sol": {
        "keccak256": "0x485867dc46af4ee0812024758b2f3493b3efc15f8ba23d73223dd847b04c8018",
        "urls": [
          "bzz-raw://2b9b29d8ee033a2ed8dd1bdb024027704f1180a1316732cb3d3874898d277736",
          "dweb:/ipfs/QmR257FurAqL57rzY1BVJhxCS6yndrBow1J4hMHCwfcvyA"
        ],
        "license": "LicenseRef-Ecosystem"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/subnet-evm/contracts/contracts/interfaces/IWarpMessenger.sol": {
        "keccak256": "0x9f75d13b8995e3b13a39b88b9f7d8046a3127c1b81abcd202c2438ddece42819",
        "urls": [
          "bzz-raw://12af89d9499252371faa23dfc13b4067876f7d7b6b01a1a3d891cbf7c9b1f90c",
          "dweb:/ipfs/QmXntNu3vLECvSAJdacsebtecoaUpeYvUDATpxS5GbB8bL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 45
}
